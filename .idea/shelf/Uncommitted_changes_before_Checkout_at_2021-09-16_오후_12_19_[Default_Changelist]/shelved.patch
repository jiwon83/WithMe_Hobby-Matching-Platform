Index: app/src/main/java/com/cookandroid/withmetabbar/navigation/FragmentPlus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cookandroid.withmetabbar.navigation;\r\n\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.app.TimePickerDialog;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.media.MediaPlayer;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TimePicker;\r\nimport android.widget.Toast;\r\nimport android.widget.ToggleButton;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport com.cookandroid.withmetabbar.MainActivity;\r\nimport com.cookandroid.withmetabbar.MainActivityHome;\r\nimport android.Manifest;\r\nimport com.cookandroid.withmetabbar.R;\r\nimport com.cookandroid.withmetabbar.certify.FragmentSelectHobby2;\r\nimport com.cookandroid.withmetabbar.certify.LivePlaceFragment;\r\nimport com.cookandroid.withmetabbar.certify.MainActivity2;\r\nimport com.cookandroid.withmetabbar.model.Hobby;\r\nimport com.cookandroid.withmetabbar.model.Meet;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\n\r\nimport static android.app.Activity.RESULT_CANCELED;\r\nimport static android.app.Activity.RESULT_OK;\r\nimport static androidx.core.content.ContextCompat.checkSelfPermission;\r\n\r\n\r\n@SuppressWarnings(\"deprecation\")\r\npublic class FragmentPlus extends Fragment {\r\n\r\n    String newKey;\r\n\r\n    private DatabaseReference mDatabase;\r\n    private final int GET_GALLERY_IMAGE = 200;//?무슨의미\r\n    private ImageView imageView, imageView7;\r\n    private ImageButton imageButton;\r\n    //private ToggleButton toggleButton, toggleButton1,toggleButton2,toggleButton3,toggleButton4;\r\n    private Button btnMeet;\r\n    private MediaPlayer MP;\r\n    private Uri imageUri;//모임이미지\r\n    private String uid=\"\";\r\n    TimePickerDialog mTimePicker;\r\n    private Date meetDate;\r\n    private int meetDateInt;//int형 데이터\r\n    ArrayList<String> list = new ArrayList<>(); //bundle받기 위해 선택한 취미값들을 받아서 저장할 배열\r\n\r\n\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState) {\r\n        ViewGroup vGroup = (ViewGroup) inflater.inflate(R.layout.fragment_plus, container, false);\r\n        //getSupportActionBar().setDisplayShowHomeEnabled(true);\r\n        //getSupportActionBar().setIcon(R.drawable.ic_launcher);\r\n        //setTitle(\"레이아웃 선택\");\r\n\r\n\r\n\r\n\r\n        btnMeet= vGroup.findViewById(R.id.btn_meet);//버튼\r\n        EditText etTitle=vGroup.findViewById(R.id.etTitle);\r\n        EditText etAge=vGroup.findViewById(R.id.etMeetAge);\r\n        EditText etNumMem=vGroup.findViewById(R.id.etNumMem);\r\n        EditText etContent=vGroup.findViewById(R.id.etContent);\r\n        EditText etHobby=vGroup.findViewById(R.id.etHobby);\r\n        EditText et_date = vGroup.findViewById(R.id.Date);\r\n        CheckBox cb_male = vGroup.findViewById(R.id.check_male);\r\n        CheckBox cb_female = vGroup.findViewById(R.id.check_female);\r\n        CheckBox cb_no = vGroup.findViewById(R.id.checkNo);\r\n\r\n\r\n        Intent intent = new Intent();\r\n\r\n        Bundle bundle = getArguments();\r\n        //uid=bundle.getString(\"uid\");//null?\r\n        uid= FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n\r\n\r\n        if (bundle.getStringArrayList(\"hobby\")!=null){\r\n            list = bundle.getStringArrayList(\"hobby\");\r\n            Log.d(\"getBundleInPlus\", String.valueOf(bundle.getStringArrayList(\"hobby\")));\r\n            //받은 취미 목록을 차례로 tv에 입력\r\n            int totalHobbyCount = list.size();\r\n            for (int index =0; index<totalHobbyCount; index++){\r\n                etHobby.append(\",\"+list.get(index));\r\n            }\r\n\r\n        }else {\r\n            etHobby.setText(\"클릭하세요.\");\r\n        }\r\n\r\n\r\n\r\n\r\n        //날짜 선택\r\n\r\n        Calendar myCalendar = Calendar.getInstance();\r\n        DatePickerDialog.OnDateSetListener myDatePicker = new DatePickerDialog.OnDateSetListener() {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                myCalendar.set(Calendar.YEAR, year);\r\n                myCalendar.set(Calendar.MONTH, month);\r\n                myCalendar.set(Calendar.DAY_OF_MONTH, dayOfMonth);\r\n                updateLabel();\r\n            }\r\n\r\n            private void updateLabel() {\r\n                String myFormat = \"yyyy/MM/dd\";    // 출력형식   2018/11/28\r\n                SimpleDateFormat sdf = new SimpleDateFormat(myFormat, Locale.KOREA); //string형태로 바뀐다.\r\n\r\n                et_date.setText(sdf.format(myCalendar.getTime()));\r\n                DateFormat sdFormat = new SimpleDateFormat(\"yyyy-MM-dd\");//필요x\r\n\r\n                //데이터 firebase저장위해 meetDate 변수에 대입\r\n                try {\r\n                    //meetDate=myCalendar.getTime(); //캘린더타입\r\n                    //meetDate.=myCalendar.get(Calendar.DAY_OF_MONTH);\r\n\r\n                    //meetDate.setYear(myCalendar.get(Calendar.YEAR));//년\r\n                    //meetDate.setMonth(myCalendar.get(Calendar.MONTH));//월\r\n                    //meetDate.setDate(myCalendar.get(Calendar.DAY_OF_MONTH));//일\r\n\r\n                    //meetDate=myCalendar.get(Calendar.YEAR);\r\n                    //meetDate=myCalendar.get(Calendar.DAY_OF_WEEK);\r\n\r\n                    Log.d(\"meetDate\", String.valueOf(meetDate));\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        };\r\n\r\n        //취미선택\r\n        etHobby.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                FragmentPlusSelectHobby fragmentPlusSelectHobby= new FragmentPlusSelectHobby();\r\n                ((MainActivity)getActivity()).addFragment(fragmentPlusSelectHobby);\r\n\r\n            }\r\n        });\r\n\r\n        et_date.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                new DatePickerDialog(getContext(), myDatePicker, myCalendar.get(Calendar.YEAR), myCalendar.get(Calendar.MONTH), myCalendar.get(Calendar.DAY_OF_MONTH)).show();\r\n            }\r\n        });\r\n\r\n        //시간선택\r\n        final EditText et_time = vGroup.findViewById(R.id.Time);\r\n        et_time.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Calendar mcurrentTime = Calendar.getInstance();\r\n                int hour = mcurrentTime.get(Calendar.HOUR_OF_DAY); //선택한 시간(24시간제)\r\n                int minute = mcurrentTime.get(Calendar.MINUTE); //선택한 분\r\n                //TimePickerDialog mTimePicker;\r\n                mTimePicker = new TimePickerDialog(getContext(), new TimePickerDialog.OnTimeSetListener() {\r\n                    @Override\r\n                    public void onTimeSet(TimePicker timePicker, int selectedHour, int selectedMinute) {\r\n                        String state = \"AM\";\r\n                        myCalendar.set(Calendar.AM_PM, 0);//오전이면 0\r\n\r\n                        // 선택한 시간이 12를 넘을경우 \"PM\"으로 변경 및 -12시간하여 출력 (ex : PM 6시 30분)\r\n                        if (selectedHour > 12) {\r\n                            selectedHour -= 12;\r\n                            state = \"PM\";\r\n                            myCalendar.set(Calendar.AM_PM, 1);//오후면 1\r\n                        }\r\n                        // EditText에 출력할 형식 지정\r\n                        et_time.setText(state + \" \" + selectedHour + \"시 \" + selectedMinute + \"분\");\r\n                        myCalendar.set(Calendar.HOUR, selectedHour);\r\n                        myCalendar.set(Calendar.MINUTE, selectedMinute);\r\n\r\n                        meetDate=myCalendar.getTime();\r\n\r\n\r\n                    }\r\n                }, hour, minute, false); // true의 경우 24시간 형식의 TimePicker 출현\r\n                mTimePicker.setTitle(\"Select Time\");\r\n                mTimePicker.show();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        imageView = (ImageView)vGroup.findViewById(R.id.imageView7);\r\n        imageView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n//                Intent intent = new Intent();\r\n                intent.setType(\"image/*\");\r\n                intent.setAction(Intent.ACTION_GET_CONTENT);\r\n                startActivityForResult(intent, GET_GALLERY_IMAGE);\r\n\r\n\r\n            }\r\n        });\r\n        //버튼 누르면 데이터에 저장\r\n        btnMeet.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //FirebaseStorage storage= FirebaseStorage.getInstance();\r\n                //StorageReference storageRef = storage.getReference();\r\n                //파일명 만들기\r\n                String filename=\"meet\"+uid+\".jpeg\";\r\n                Uri file = imageUri;//\r\n                Log.d(\"imageUri\", String.valueOf(file));\r\n                Log.d(\"filename\", filename);\r\n                //여기서 원하는 이름 넣어준다.(filename 넣어주기)\r\n                //StorageReference riversRef = storageRef.child(\"meetImage/\"+filename);\r\n                //UploadTask uploadTask = riversRef.putFile(file);//storage에 이미지 업로드\r\n\r\n\r\n\r\n                \r\n\r\n                //이미지 strage에 저장\r\n                FirebaseStorage.getInstance().getReference().child(\"meetImages/\"+imageUri.getLastPathSegment()).child(uid).putFile(imageUri).addOnCompleteListener(new OnCompleteListener<UploadTask.TaskSnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<UploadTask.TaskSnapshot> task) {\r\n\r\n                        Meet meet = new Meet();\r\n                        //meet.mid =\r\n                        meet.uid =uid; //uid정보 추가\r\n                        meet.title = etTitle.getText().toString();\r\n                        meet.meetAge = Integer.parseInt(etAge.getText().toString());\r\n                        meet.numMember = Integer.parseInt(etNumMem.getText().toString());\r\n                        meet.content = etContent.getText().toString();\r\n                        meet.imgUrl = file.toString();\r\n                        meet.meetDate =meetDate;\r\n                        meet.hobbyCate = new ArrayList<>();\r\n\r\n                        int totalHobbyCount2 = list.size();\r\n                        for (int index = 0; index < totalHobbyCount2; index++) {\r\n                            meet.hobbyCate.add(list.get(index));\r\n                        }\r\n\r\n\r\n                        //성별체크\r\n                        if (cb_male.isChecked()){\r\n                            meet.meetGen =1; //남자는 1\r\n                        }else if (cb_female.isChecked()){\r\n                            meet.meetGen =2; //여자는 2\r\n                        }else if (cb_no.isChecked()){\r\n                            meet.meetGen =0; //무관은 0\r\n                        }else {\r\n                            Toast.makeText(getContext(),\"성별을 체크하세요.\",Toast.LENGTH_SHORT);\r\n                        }\r\n\r\n                        //meet라는 데이터 넣기\r\n\r\n                        DatabaseReference databaseReference,databaseReference2;\r\n\r\n                        databaseReference= FirebaseDatabase.getInstance().getReference().child(\"meet\").push();\r\n                        String key =databaseReference.getKey();//meet uid\r\n\r\n                        //2021-09-14 내가 만든 모임 구현\r\n                        //databaseReference2= FirebaseDatabase.getInstance().getReference().child(\"user-meets\"+uid+\"/\"+key).push();\r\n                        databaseReference2= FirebaseDatabase.getInstance().getReference().child(\"user-meets\").child(uid);//.child(key);\r\n\r\n                        //새로 추가한 것 hobby 저장을 위한 참조 데이타\r\n//                        newKey= databaseReference.getKey();\r\n//                        databaseReference2 =FirebaseDatabase.getInstance().getReference().child(\"meet\").child(newKey).child(\"hobby\");\r\n\r\n\r\n\r\n                        databaseReference.setValue(meet).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n\r\n                                //데이터 저장을 위한 객체 참조\r\n                                final FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n\r\n//                                Log.d(\"key_value\", newKey);//key 는 uid가 아니라 meet 인듯\r\n\r\n                                //받은 취미 목록을 차례로 저장 : 이미 저장한뒤 push로 update\r\n//                                int totalHobbyCount2 = list.size();\r\n//                                for (int index = 0; index < totalHobbyCount2; index++) {\r\n//                                    databaseReference2.push().setValue(new Hobby(list.get(index)));\r\n//                                }\r\n\r\n                                databaseReference2.push().setValue(meet);\r\n\r\n\r\n\r\n\r\n                                MainActivityHome mainActivityHome= new MainActivityHome();\r\n                                ((MainActivity)getActivity()).replaceFragment(mainActivityHome);\r\n\r\n                                //이 코드는 fragement 뒤로가기 코드\r\n                                //FragmentManager fragmentManager = getActivity().getSupportFragmentManager();\r\n                                //fragmentManager.beginTransaction().remove(FragmentPlus.this).commit();\r\n                                //fragmentManager.popBackStack();\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        return vGroup;\r\n    }\r\n    //내용 업로드\r\n    private void contentUpload() {\r\n\r\n        String timestamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(System.currentTimeMillis());\r\n\r\n    }\r\n\r\n    //갤러리로 가는 법\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == GET_GALLERY_IMAGE) {\r\n            if (resultCode == RESULT_OK) {\r\n                imageView.setImageURI(data.getData());\r\n                imageUri = data.getData();\r\n                Log.d(\"갤러리에서 불러온 이미지 경로\", String.valueOf(imageUri));\r\n\r\n            } else if (resultCode == RESULT_CANCELED) {\r\n                Toast.makeText(getContext(), \"사진 선택 취소\", Toast.LENGTH_LONG).show();\r\n            }\r\n        }\r\n    } //갤러리에서 사진 불러와서 넣기\r\n\r\n\r\n\r\n    protected void onMainActivity(int requestCode, int resultCode, Intent data) {\r\n        if(requestCode == GET_GALLERY_IMAGE&&resultCode == RESULT_OK&&data !=\r\n                null && data.getData()!=null){\r\n            Uri selectedImageUri = data.getData();\r\n            imageView.setImageURI(selectedImageUri);\r\n        }\r\n    }\r\n\r\n    /*public class MyGalleryAdapter extends BaseAdapter {\r\n\r\n        Context context;\r\n        Integer[] posterID = { R.drawable.layout1, R.drawable.layout2,\r\n                R.drawable.layout3, R.drawable.layout4, R.drawable.layout5,\r\n                R.drawable.layout6, R.drawable.layout7, R.drawable.layout8,\r\n                R.drawable.layout9, R.drawable.layout10};\r\n        String[] title = {\"레이아웃1\",\"레이아웃2\", \"레이아웃3\",\r\n                \"레이아웃4\",\"레이아웃5\",\"레이아웃6\",\"레이아웃7\",\"레이아웃8\",\"레이아웃9\",\"레이아웃10\"};\r\n\r\n        public MyGalleryAdapter(Context c) {\r\n            context = c;\r\n        }\r\n\r\n        public int getCount() {\r\n            return posterID.length;\r\n        }\r\n\r\n\r\n\r\n        public Object getItem(int arg0) {\r\n            return null;\r\n        }\r\n\r\n        public long getItemId(int position) {\r\n            return 0;\r\n        }\r\n\r\n        /*public View getView(int position, View convertView, ViewGroup parent) {\r\n            ImageView imageview = new ImageView(context);\r\n            imageview.setLayoutParams(new Gallery.LayoutParams(200, 300));\r\n            imageview.setScaleType(ImageView.ScaleType.FIT_CENTER);\r\n            imageview.setPadding(5, 5, 5, 5);\r\n            imageview.setImageResource(posterID[position]);\r\n\r\n\r\n            final int pos = position;\r\n            imageview.setOnTouchListener(new View.OnTouchListener() {\r\n                public boolean onTouch (View v, MotionEvent event) {\r\n                    ImageView ivPoster = (ImageView) findViewById(R.id.ivPoster);\r\n                    ivPoster.setScaleType(ImageView.ScaleType.FIT_CENTER);\r\n                    ivPoster.setImageResource(posterID[pos]);\r\n                    Toast.makeText(getApplicationContext(),title[pos],Toast.LENGTH_SHORT).show();\r\n\r\n                    //dlg.setIcon(R.drawable.movie_icon);\r\n\r\n                    return false;\r\n                }\r\n            });*/\r\n\r\n    //return imageview\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cookandroid/withmetabbar/navigation/FragmentPlus.java	(revision 61518bda48947942801de4706066db5509a396cd)
+++ app/src/main/java/com/cookandroid/withmetabbar/navigation/FragmentPlus.java	(date 1631757208005)
@@ -175,6 +175,7 @@
 
             }
         });
+        //날짜 클릭
 
         et_date.setOnClickListener(new View.OnClickListener() {
             @Override
Index: app/src/main/java/com/cookandroid/withmetabbar/certify/FragmentSelectHobby2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cookandroid.withmetabbar.certify;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.util.SparseBooleanArray;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.BaseAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.cookandroid.withmetabbar.MainActivity;\r\nimport com.cookandroid.withmetabbar.MainActivityHome;\r\nimport com.cookandroid.withmetabbar.R;\r\nimport com.cookandroid.withmetabbar.model.Hobby;\r\nimport com.cookandroid.withmetabbar.model.HobbyBig;\r\nimport com.cookandroid.withmetabbar.model.Meet;\r\nimport com.cookandroid.withmetabbar.model.Member;\r\nimport com.cookandroid.withmetabbar.navigation.FragmentPlus;\r\nimport com.cookandroid.withmetabbar.navigation.OnItemClick;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport static android.graphics.Color.MAGENTA;\r\nimport static android.graphics.Color.YELLOW;\r\n\r\npublic class FragmentSelectHobby2 extends Fragment implements OnItemClick {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    ImageButton imgBtn;\r\n    TextView tv;//취미분야 선택\r\n    ProgressBar progressBar;\r\n    private String selectedHobbyBig;\r\n    Button btnFinish; //메인화면으로 화면전환버튼\r\n    ArrayList<String> list = new ArrayList<>(); //bundle 전달을 위해 선택한 취미값들을 받아서 저장할 배열\r\n\r\n    //중첩 recyclerView에 넣을 데이터\r\n    private final ArrayList<ArrayList<Hobby>> allHobbyList = new ArrayList();\r\n    private final ArrayList<HobbyBig> HobbyBigList2 = new ArrayList();//대분류\r\n\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n\r\n    public FragmentSelectHobby2() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment FragmentSelectHobby.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static FragmentSelectHobby newInstance(String param1, String param2) {\r\n        FragmentSelectHobby fragment = new FragmentSelectHobby();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            selectedHobbyBig = getArguments().getString(ARG_PARAM1);\r\n            //mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        ViewGroup vg =  (ViewGroup)inflater.inflate(R.layout.fragment_select_hobby2, container, false);\r\n\r\n        //imgBtn = vg.findViewById(R.id.imageButton);\r\n        tv=vg.findViewById(R.id.textView);\r\n        progressBar=vg.findViewById(R.id.progressBar);\r\n        btnFinish= vg.findViewById(R.id.selectHobby2_btn_next);\r\n\r\n        tv.setText(\"취미 분야 선택 : \"+selectedHobbyBig);\r\n\r\n\r\n        //Log.d(\"selectedHobbyBig\",selectedHobbyBig);\r\n        //final GridView gridView= vg.findViewById(R.id.gridView);\r\n        //ViewGroup vg2 =  (ViewGroup)inflater.inflate(R.layout.select_hobby_grid_in, container, false);\r\n        //iv2= vg2.findViewById(R.id.imageView_sel_hb);\r\n\r\n//        int[] img ={\r\n//                R.drawable.hobby_music,R.drawable.hb_craft,R.drawable.hb_sport\r\n//\r\n//        };\r\n\r\n\r\n\r\n        //바로 해보기\r\n        ArrayList<ArrayList<String>> hbLists = new ArrayList<ArrayList<String>>();\r\n\r\n        ArrayList<String> hbList_music = new ArrayList<>();\r\n        hbList_music.add(\"음악\");\r\n        hbList_music.add(\"클래식\");\r\n        hbList_music.add(\"k-pop\");\r\n        hbList_music.add(\"뉴에이지\");\r\n        hbList_music.add(\"발라드\");\r\n        hbList_music.add(\"랩/힙합\");\r\n        hbList_music.add(\"인디음악\");\r\n        hbList_music.add(\"록/메탈\");\r\n        hbList_music.add(\"포크/블루스\");\r\n\r\n        //2차원배열에 답기\r\n        hbLists.add(hbList_music);\r\n\r\n        //tv.setText((CharSequence) hbLists.get(0).get(0));\r\n\r\n        //응용참고\r\n        /*\r\n        System.out.println(datas.size());\r\n        \t//결과: 3\r\n\t\tSystem.out.println(datas.toString());\r\n        \t//결과: [[1, 2, 3], [11, 22, 33], [111, 222, 333]]\r\n\r\n\t\tSystem.out.println(datas.get(0));\r\n\t\t//결과: [1, 2, 3]\r\n         */\r\n\r\n        //리사이클러뷰\r\n        this.initializeData();\r\n        this.initializeData2();\r\n\r\n        RecyclerView view = vg.findViewById(R.id.recyclerViewVertical);\r\n\r\n        com.cookandroid.withmetabbar.certify.VerticalAdapter verticalAdapter = new com.cookandroid.withmetabbar.certify.VerticalAdapter(getContext(), allHobbyList, HobbyBigList2,this);\r\n        //여기의 this는 이 클래스 자체를 의미한다. 아래의 OnItemClick 을 override한 onClick()메서드가 실행되어야 하기 때문이다.\r\n        view.setHasFixedSize(true);\r\n        view.setLayoutManager(new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false));\r\n        view.setAdapter(verticalAdapter);\r\n\r\n\r\n        //화면전환\r\n        btnFinish.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Bundle bundle = new Bundle();\r\n                bundle.putStringArrayList(\"hobby\", list);\r\n                JoinStartFragment joinStartFragment = new JoinStartFragment();\r\n                joinStartFragment.setArguments(bundle);\r\n\r\n\r\n                //hide & show\r\n//                ((MainActivity)getActivity()).hideFragment(FragmentPlusSelectHobby.this);\r\n                //FragmentPlus fragmentPlus = new FragmentPlus();\r\n//                ((MainActivity)getActivity()).showFragment(fragmentPlus);\r\n\r\n                //remove\r\n                //((MainActivity)getActivity()).removeFragment(FragmentPlusSelectHobby.this);\r\n                //FragmentPlus fragmentPlus = new FragmentPlus();\r\n\r\n                //replace\r\n                ((MainActivity2)getActivity()).replaceFragment(joinStartFragment);\r\n\r\n\r\n            }\r\n        });\r\n\r\n        //데이터 저장을 위한 객체 참조\r\n//        final FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n//        DatabaseReference ref = database.getReference();\r\n//        DatabaseReference usersRef = ref.child(\"users\");\r\n//        String uid = FirebaseAuth.getInstance().getCurrentUser().getUid();//사용자 uid\r\n//        DatabaseReference hopperRef = usersRef.child(uid); //  /users/uid\r\n\r\n        //push 데이터 저장\r\n//        DatabaseReference pushRef = hopperRef.child(\"hobby\");\r\n//        pushRef.push().setValue(new Hobby(\"탁구\"));\r\n//        pushRef.push().setValue(new Hobby(\"배구\"));\r\n\r\n        //update 데이터 저장\r\n//        Map<String, Object> hopperUpdates = new HashMap<>();\r\n//        hopperUpdates.put(\"hobby1\", \"베이킹\");\r\n//        hopperUpdates.put(\"hobby2\", new Hobby(\"공예\"));\r\n//        hopperUpdates.put(\"hobby2\", new Hobby(\"베이킹\"));\r\n        //hopperUpdates.put(\"hobby\", hobbyListTest);\r\n//        hopperRef.updateChildren(hopperUpdates); //데이터 업데이트\r\n\r\n\r\n\r\n//        Bundle data = getArguments();\r\n//        String data1 = data.getString(\"selectedList\");\r\n//        pushRef.push().setValue(new Hobby(data1));\r\n\r\n        //선택한 hobby값을 가져오기 위한, 커스텀 리스너 객체 생성 및 전달\r\n//        HorizontalAdapter horizontalAdapter= new HorizontalAdapter();\r\n//        horizontalAdapter.setOnItemClickListener(new HorizontalAdapter.OnItemClickListener() {\r\n//            @Override\r\n//            public void onItemClick(View v, int position) {\r\n//                //받아온 값을 데이터에 저장\r\n//                Bundle data = getArguments();\r\n//                String data1 = data.getString(\"selectedList\");\r\n//                pushRef.push().setValue(new Hobby(data1));\r\n//\r\n//            }\r\n//        });\r\n\r\n        return vg;\r\n    }\r\n\r\n    @Override\r\n    public void onClick(String value) {\r\n        //value this data you receive when selectedItems() called\r\n        list.add(value);\r\n        Log.d(\"onClickSuccess?\",value); //성공적으로 받아진다.\r\n    }\r\n\r\n    //소분류 취미목록 데이터 입력\r\n    public void initializeData()\r\n    {\r\n        ArrayList<Hobby> hobbyList1 = new ArrayList();\r\n\r\n        hobbyList1.add(new Hobby( \"클래식\"));\r\n        hobbyList1.add(new Hobby(\"K-pop\"));\r\n        hobbyList1.add(new Hobby(\"뉴에이지\"));\r\n        hobbyList1.add(new Hobby(\"발라드\"));\r\n        hobbyList1.add(new Hobby(\"랩/힙합\"));\r\n        hobbyList1.add(new Hobby(\"인디음악\"));\r\n        hobbyList1.add(new Hobby(\"록/메탈\"));\r\n        hobbyList1.add(new Hobby(\"포크.블루스\"));\r\n\r\n\r\n        allHobbyList.add(hobbyList1);\r\n\r\n        ArrayList<Hobby> hobbyList2 = new ArrayList();\r\n\r\n        hobbyList2.add(new Hobby( \"야구\"));\r\n        hobbyList2.add(new Hobby( \"축구\"));\r\n        hobbyList2.add(new Hobby( \"농구\"));\r\n        hobbyList2.add(new Hobby( \"볼링\"));\r\n        hobbyList2.add(new Hobby( \"당구\"));\r\n        hobbyList2.add(new Hobby( \"수영\"));\r\n        hobbyList2.add(new Hobby( \"탁구\"));\r\n        hobbyList2.add(new Hobby( \"폴댄스\"));\r\n        hobbyList2.add(new Hobby( \"골프\"));\r\n        hobbyList2.add(new Hobby( \"배드민턴\"));\r\n        hobbyList2.add(new Hobby( \"클라이밍\"));\r\n\r\n        allHobbyList.add(hobbyList2);\r\n\r\n        ArrayList<Hobby> hobbyList3 = new ArrayList();\r\n\r\n        hobbyList3.add(new Hobby( \"캠핑\"));\r\n        hobbyList3.add(new Hobby( \"바다\"));\r\n        hobbyList3.add(new Hobby( \"국내\"));\r\n        hobbyList3.add(new Hobby( \"해외\"));\r\n        hobbyList3.add(new Hobby( \"당일치기\"));\r\n        hobbyList3.add(new Hobby( \"배낭여행\"));\r\n        hobbyList3.add(new Hobby( \"익스트림\"));\r\n        hobbyList3.add(new Hobby( \"기타\"));\r\n\r\n        allHobbyList.add(hobbyList3);\r\n        ArrayList<Hobby> hobbyList4 = new ArrayList();\r\n\r\n        hobbyList4.add(new Hobby( \"전시\"));\r\n        hobbyList4.add(new Hobby( \"뮤지컬\"));\r\n        hobbyList4.add(new Hobby( \"영화\"));\r\n        hobbyList4.add(new Hobby( \"해외\"));\r\n        hobbyList4.add(new Hobby( \"콘서트\"));\r\n        hobbyList4.add(new Hobby( \"연극\"));\r\n        hobbyList4.add(new Hobby( \"오페라\"));\r\n        hobbyList4.add(new Hobby( \"연주회\"));\r\n        hobbyList4.add(new Hobby( \"오케스트라\"));\r\n        hobbyList4.add(new Hobby( \"기타\"));\r\n\r\n        allHobbyList.add(hobbyList4);\r\n\r\n        ArrayList<Hobby> hobbyList5 = new ArrayList();\r\n\r\n        hobbyList5.add(new Hobby( \"리본공예\"));\r\n        hobbyList5.add(new Hobby( \"비즈공예\"));\r\n        hobbyList5.add(new Hobby( \"도자기공예\"));\r\n        hobbyList5.add(new Hobby( \"넵킨공예\"));\r\n        hobbyList5.add(new Hobby( \"포크아트\"));\r\n        hobbyList5.add(new Hobby( \"북아트\"));\r\n        hobbyList5.add(new Hobby( \"클레이아트\"));\r\n        hobbyList5.add(new Hobby( \"가죽공예\"));\r\n        hobbyList5.add(new Hobby( \"유리공예\"));\r\n        hobbyList5.add(new Hobby( \"플라워아트\"));\r\n\r\n        allHobbyList.add(hobbyList5);\r\n\r\n        ArrayList<Hobby> hobbyList6 = new ArrayList();\r\n\r\n        hobbyList6.add(new Hobby( \"양식\"));\r\n        hobbyList6.add(new Hobby( \"한식\"));\r\n        hobbyList6.add(new Hobby( \"일식\"));\r\n        hobbyList6.add(new Hobby( \"중식\"));\r\n        hobbyList6.add(new Hobby( \"베이킹\"));\r\n        hobbyList6.add(new Hobby( \"설탕공예\"));\r\n\r\n\r\n        allHobbyList.add(hobbyList6);\r\n\r\n        ArrayList<Hobby> hobbyList7 = new ArrayList();\r\n\r\n        hobbyList6.add(new Hobby( \"강아지\"));\r\n        hobbyList6.add(new Hobby( \"고양이\"));\r\n        hobbyList6.add(new Hobby( \"조류\"));\r\n        hobbyList6.add(new Hobby( \"햄스터\"));\r\n        hobbyList6.add(new Hobby( \"파충류\"));\r\n        hobbyList6.add(new Hobby( \"곤충\"));\r\n\r\n\r\n        allHobbyList.add(hobbyList7);\r\n    }\r\n\r\n    //대분류 취미목록 데이터 입력\r\n    public void initializeData2()\r\n    {\r\n//        ArrayList<HobbyBig> hobbyBigList = new ArrayList();\r\n//        hobbyBigList.add(new HobbyBig( \"음악\"));\r\n//        hobbyBigList.add(new HobbyBig(\"스포츠\"));\r\n//        hobbyBigList.add(new HobbyBig(\"여행\"));\r\n//        hobbyBigList.add(new HobbyBig(\"문화\"));\r\n//        hobbyBigList.add(new HobbyBig(\"공예\"));\r\n//        hobbyBigList.add(new HobbyBig(\"요리\"));\r\n//        hobbyBigList.add(new HobbyBig(\"게임\"));\r\n//        hobbyBigList.add(new HobbyBig(\"팬모임\"));\r\n\r\n        HobbyBigList2.add(new HobbyBig( \"음악\"));\r\n        HobbyBigList2.add(new HobbyBig( \"스포츠\"));\r\n        HobbyBigList2.add(new HobbyBig( \"여행\"));\r\n        HobbyBigList2.add(new HobbyBig( \"문화\"));\r\n        HobbyBigList2.add(new HobbyBig( \"공예\"));\r\n        HobbyBigList2.add(new HobbyBig( \"요리\"));\r\n        HobbyBigList2.add(new HobbyBig( \"반려동물\"));\r\n\r\n    }\r\n}\r\n\r\n//\r\nclass HorizontalAdapter extends RecyclerView.Adapter<com.cookandroid.withmetabbar.certify.HorizontalAdapter.HorizontalViewHolder> {\r\n\r\n    private OnItemClick mCallback; //OnItemClick 인터페이스 객체\r\n    private ArrayList<Hobby> dataList;\r\n    private SparseBooleanArray mSelectedItems = new SparseBooleanArray(0);//클릭하면 색상변경//클릭 안하면 0 하면 1??\r\n    private ArrayList<Hobby> selectedList= new ArrayList<>(); //선택한 취미 값\r\n\r\n    public HorizontalAdapter(){}\r\n\r\n    public HorizontalAdapter(ArrayList<Hobby> data, OnItemClick listener)\r\n    {\r\n        this.dataList = data;\r\n        this.mCallback = listener;\r\n    }\r\n\r\n//    public interface OnItemClickListener{\r\n//        void onItemClick(View v, int position);\r\n//    }//어텝터 내에서 커스텀 리스너 인터페이스 정의\r\n\r\n\r\n    public class HorizontalViewHolder extends RecyclerView.ViewHolder{\r\n        protected TextView tv;\r\n        private ArrayList<String> selectData = null ;\r\n        private String selected=\"\";\r\n        int count=1;\r\n\r\n        //받아올 값\r\n        public void selectedItems(){\r\n            mCallback.onClick(tv.getText().toString());//tv를 클릭하면?\r\n        }\r\n\r\n        public HorizontalViewHolder(View view)\r\n        {\r\n            super(view);\r\n            tv = view.findViewById(R.id.btn_hbList_in);\r\n            //클릭하면 색상변경\r\n            view.setOnClickListener(new View.OnClickListener() {\r\n                @RequiresApi(api = Build.VERSION_CODES.O)\r\n                @SuppressLint(\"ResourceAsColor\")\r\n                @Override\r\n                public void onClick(View v) {\r\n                    int position = getAdapterPosition();\r\n\r\n                    Log.d(\"tv\",tv.getText().toString());\r\n                    selectedItems();\r\n\r\n\r\n\r\n                    if ( mSelectedItems.get(position, false) ){\r\n\r\n                        mSelectedItems.put(position, false);\r\n                        v.setBackgroundColor(MAGENTA);\r\n\r\n                    } else {\r\n                        mSelectedItems.put(position, true);\r\n                        v.setBackgroundColor(YELLOW);\r\n                    }\r\n                    Log.d(\"test\", \"position = \" + position);\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public com.cookandroid.withmetabbar.certify.HorizontalAdapter.HorizontalViewHolder onCreateViewHolder(ViewGroup viewGroup, int i)\r\n    {\r\n        View v = LayoutInflater\r\n                .from(viewGroup.getContext())\r\n                .inflate(R.layout.select_hobby2_grid_in2, null);\r\n\r\n\r\n\r\n\r\n        return new com.cookandroid.withmetabbar.certify.HorizontalAdapter.HorizontalViewHolder(v);\r\n    }\r\n\r\n    @SuppressLint(\"ResourceAsColor\")\r\n    @Override\r\n    public void onBindViewHolder(com.cookandroid.withmetabbar.certify.HorizontalAdapter.HorizontalViewHolder horizontalViewHolder, int position)\r\n    {\r\n//        horizontalViewHolder\r\n//                .image\r\n//                .setImageResource(dataList.get(position).getResourceID());\r\n        horizontalViewHolder\r\n                .tv\r\n                .setText(dataList.get(position).getHobbyname());\r\n\r\n        //클릭하면 색상 변경\r\n        if ( mSelectedItems.get(position, false) ){\r\n            horizontalViewHolder.itemView.setBackgroundColor(YELLOW);//선택했을 때\r\n        } else {\r\n            horizontalViewHolder.itemView.setBackgroundColor(MAGENTA);//기본, 선택 안했을 때\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return dataList.size();\r\n    }\r\n\r\n    public ArrayList<Hobby> getSelected(){\r\n\r\n        return selectedList;\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nclass VerticalAdapter extends RecyclerView.Adapter<com.cookandroid.withmetabbar.certify.VerticalAdapter.VerticalViewHolder>{\r\n\r\n    private OnItemClick mCallback;\r\n    private ArrayList<ArrayList<Hobby>> AllHobbyList;//전체 취미목록들을 2차원 배열에 넣어준다.\r\n    private Context context;\r\n    //test 취미목록 대분류 넣기\r\n    private ArrayList<HobbyBig> DataListBig;\r\n\r\n    //test\r\n    public VerticalAdapter(ArrayList<HobbyBig> data)\r\n    {\r\n        this.DataListBig = data;\r\n    }\r\n    //\r\n\r\n    public VerticalAdapter(Context context, ArrayList<ArrayList<Hobby>> data, ArrayList<HobbyBig> data2,OnItemClick listener)\r\n    {\r\n        this.mCallback =listener;\r\n        this.context = context;\r\n        this.AllHobbyList = data;\r\n        this.DataListBig = data2;//대분류\r\n    }\r\n    //VerticalViewHolder 맨 처음 10개의 뷰객체를 기억하고 있을(홀딩) 객체\r\n    public class VerticalViewHolder extends RecyclerView.ViewHolder{\r\n        protected RecyclerView recyclerView;\r\n        protected TextView textView;\r\n\r\n        public VerticalViewHolder(View view)\r\n        {\r\n            super(view);\r\n            textView = view.findViewById(R.id.tv_hobby);\r\n            this.recyclerView = (RecyclerView)view.findViewById(R.id.recyclerViewVertical);\r\n        }\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public com.cookandroid.withmetabbar.certify.VerticalAdapter.VerticalViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {\r\n        View v = LayoutInflater\r\n                .from(viewGroup.getContext())\r\n                .inflate(R.layout.select_hobby2_grid_in, null);\r\n        return new com.cookandroid.withmetabbar.certify.VerticalAdapter.VerticalViewHolder(v);\r\n    }\r\n    //수직 RecyclerView의 데이터 항목은 앞서 구현한 수평 RecyclerView가 배치된다고 하였습니다.\r\n    // 그러기 위해 onBindViewHolder에서 HorizontalAdapter 객체를 생성\r\n    @Override\r\n    public void onBindViewHolder(@NonNull com.cookandroid.withmetabbar.certify.VerticalAdapter.VerticalViewHolder verticalViewHolder, int position) {\r\n        com.cookandroid.withmetabbar.certify.HorizontalAdapter adapter = new com.cookandroid.withmetabbar.certify.HorizontalAdapter(AllHobbyList.get(position),mCallback);\r\n        //adapter.getSelected();\r\n        //현재 위치의 arrayList를 AllHobbyList로 받아서 adapter생성.\r\n\r\n        //대분류 배열 처리- textView에 넣기\r\n        verticalViewHolder\r\n                .textView\r\n                .setText(DataListBig.get(position).getHobbyBigname());\r\n\r\n        verticalViewHolder.recyclerView.setHasFixedSize(true);\r\n        verticalViewHolder.recyclerView.setLayoutManager(new LinearLayoutManager(context\r\n                , LinearLayoutManager.HORIZONTAL\r\n                ,false));\r\n        verticalViewHolder.recyclerView.setAdapter(adapter);\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return AllHobbyList.size();\r\n    }\r\n}\r\n\r\n\r\n//Adapter\r\nclass MyAdapter2 extends BaseAdapter{\r\n    Context context;\r\n    int layout;\r\n    String[] btnNames;\r\n    LayoutInflater inflater;\r\n    public MyAdapter2(Context c) {context=c;}\r\n\r\n    public MyAdapter2(Context context, int layout, String[] strings){\r\n        this.context = context;\r\n        this.layout = layout;\r\n        this.btnNames = strings;\r\n        inflater=(LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getCount() {\r\n        //이미지배열의 크기를 return\r\n        return btnNames.length;\r\n    }\r\n\r\n    @Override\r\n    public Object getItem(int position) {\r\n        return btnNames[position];\r\n    }\r\n\r\n    @Override\r\n    public long getItemId(int position) {\r\n        return position;\r\n    }\r\n\r\n    @Override\r\n    public View getView(int position, View convertView, ViewGroup parent) {\r\n        //view전환\r\n        Button btn=null;\r\n        if (null != convertView) {\r\n            btn = (Button)convertView;\r\n        }\r\n\r\n        else {\r\n            //------------------------------------------------------------\r\n            // 버튼을 생성하고 그것의 이름을 정합니다.\r\n            btn = new Button(context);\r\n            btn.setText(btnNames[position]);\r\n\r\n            //------------------------------------------------------------\r\n            // 버튼 클릭에 대한 처리는 추후 구현 예정입니다.\r\n        }\r\n\r\n        return btn;\r\n\r\n\r\n        //imageview.setImageResource(img[position]); //데이터 베이스 배울 때 수정\r\n\r\n\r\n        /*\r\n        if (convertView==null)\r\n            convertView = inflater.inflate(layout, null);\r\n        ImageView iv = convertView.findViewById(R.id.imageView_sel_hb);\r\n        iv.setImageResource(img[position]);\r\n        return convertView;\r\n\r\n         */\r\n    }\r\n}\r\n\r\nfinal class  Varargs{\r\n    //String test2=\"\";\r\n    List<String> str = new ArrayList<String>();\r\n    //1차원 배열 생성\r\n    public void makeArray(String... strigs){\r\n\r\n        for (String s:strigs){\r\n            str.add(s);\r\n            //test2= test2+s;\r\n\r\n        }\r\n\r\n    }\r\n    //2차원배열 생성\r\n    public void makeArray2nds(String... strigs){\r\n\r\n        List<String> str2nd = new ArrayList<String>();\r\n\r\n        for (String s:strigs){\r\n            str2nd.add(s);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cookandroid/withmetabbar/certify/FragmentSelectHobby2.java	(revision 61518bda48947942801de4706066db5509a396cd)
+++ app/src/main/java/com/cookandroid/withmetabbar/certify/FragmentSelectHobby2.java	(date 1631757208003)
@@ -1,8 +1,10 @@
 package com.cookandroid.withmetabbar.certify;
 
 import android.annotation.SuppressLint;
+import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
+import android.graphics.Color;
 import android.os.Build;
 import android.os.Bundle;
 import android.util.Log;
@@ -18,6 +20,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.RequiresApi;
+import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
@@ -43,6 +46,7 @@
 
 import static android.graphics.Color.MAGENTA;
 import static android.graphics.Color.YELLOW;
+import static android.graphics.Color.red;
 
 public class FragmentSelectHobby2 extends Fragment implements OnItemClick {
 
@@ -376,6 +380,13 @@
     private SparseBooleanArray mSelectedItems = new SparseBooleanArray(0);//클릭하면 색상변경//클릭 안하면 0 하면 1??
     private ArrayList<Hobby> selectedList= new ArrayList<>(); //선택한 취미 값
 
+
+
+
+
+
+
+
     public HorizontalAdapter(){}
 
     public HorizontalAdapter(ArrayList<Hobby> data, OnItemClick listener)
@@ -420,11 +431,11 @@
                     if ( mSelectedItems.get(position, false) ){
 
                         mSelectedItems.put(position, false);
-                        v.setBackgroundColor(MAGENTA);
+                        v.setBackgroundColor(ContextCompat.getColor(v.getContext().getApplicationContext(), R.color.gray));
 
                     } else {
                         mSelectedItems.put(position, true);
-                        v.setBackgroundColor(YELLOW);
+                        v.setBackgroundColor(ContextCompat.getColor(v.getContext().getApplicationContext(), R.color.Orange));
                     }
                     Log.d("test", "position = " + position);
 
@@ -461,13 +472,18 @@
 
         //클릭하면 색상 변경
         if ( mSelectedItems.get(position, false) ){
-            horizontalViewHolder.itemView.setBackgroundColor(YELLOW);//선택했을 때
+            horizontalViewHolder.itemView.setBackgroundColor(ActivityContext().getResources().getColor(R.color.gray));//선택했을 때
         } else {
             horizontalViewHolder.itemView.setBackgroundColor(MAGENTA);//기본, 선택 안했을 때
         }
 
     }
 
+    private Context ActivityContext() {
+        return null;
+    }
+
+
     @Override
     public int getItemCount() {
         return dataList.size();
Index: app/src/main/res/layout/activity_main_home_my.xml
===================================================================
--- app/src/main/res/layout/activity_main_home_my.xml	(revision 61518bda48947942801de4706066db5509a396cd)
+++ app/src/main/res/layout/activity_main_home_my.xml	(revision 61518bda48947942801de4706066db5509a396cd)
@@ -1,86 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".MainActivity">
-
-    <LinearLayout
-        android:id="@+id/linearLayout"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginStart="10dp"
-        android:layout_marginLeft="10dp"
-        android:layout_marginTop="3dp"
-        android:layout_marginEnd="10dp"
-        android:layout_marginRight="10dp"
-        android:orientation="vertical"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent">
-
-
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical">
-            <LinearLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:background="@drawable/search_et_in"
-                android:orientation="horizontal">
-
-
-                <EditText
-                    android:id="@+id/editSearch"
-                    android:layout_width="0dp"
-                    android:layout_height="40dp"
-                    android:layout_weight="8"
-                    android:background="@null"
-                    android:hint="검색어를 입력하세요." />
-
-                <Button
-                    android:id="@+id/btn_search"
-                    android:layout_width="@dimen/search"
-                    android:layout_height="@dimen/search"
-                    android:layout_marginRight="20dp"
-                    android:background="@drawable/search"
-                    />
-
-
-            </LinearLayout>
-
-            <ListView
-                android:id="@+id/listView"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:divider="#999999"
-                android:dividerHeight="1dp"
-                android:visibility="gone"
-                >
-            </ListView>
-            <LinearLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal">
-<!--
-                <Button
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="맞춤취미추천"/>
-                    -->
-
-
-            </LinearLayout>
-
-
-            <androidx.recyclerview.widget.RecyclerView
-                android:id="@+id/recyclerView"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"/>
-
-        </LinearLayout>
-    </LinearLayout>
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/cookandroid/withmetabbar/navigation/FragmentMyMeetHome.java
===================================================================
--- app/src/main/java/com/cookandroid/withmetabbar/navigation/FragmentMyMeetHome.java	(revision 61518bda48947942801de4706066db5509a396cd)
+++ app/src/main/java/com/cookandroid/withmetabbar/navigation/FragmentMyMeetHome.java	(revision 61518bda48947942801de4706066db5509a396cd)
@@ -1,352 +0,0 @@
-package com.cookandroid.withmetabbar.navigation;
-
-import android.os.Bundle;
-import android.text.Editable;
-import android.text.TextWatcher;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.AutoCompleteTextView;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.ListView;
-import android.widget.SearchView;
-import android.widget.Toast;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-
-import com.cookandroid.withmetabbar.CustomAdapter;
-import com.cookandroid.withmetabbar.R;
-import com.cookandroid.withmetabbar.SearchAdapter;
-import com.cookandroid.withmetabbar.model.Meet;
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.database.DataSnapshot;
-import com.google.firebase.database.DatabaseError;
-import com.google.firebase.database.DatabaseReference;
-import com.google.firebase.database.FirebaseDatabase;
-import com.google.firebase.database.Query;
-import com.google.firebase.database.ValueEventListener;
-
-import org.jetbrains.annotations.NotNull;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static android.content.ContentValues.TAG;
-
-public class FragmentMyMeetHome extends Fragment {
-
-    private RecyclerView recyclerView;
-    private RecyclerView.Adapter adapter;
-    private RecyclerView.LayoutManager layoutManager;
-    private ArrayList<Meet> arrayList;//검색 후에도 recycler view에 올라갈 진짜 meet 데이터들
-    private ArrayList<Meet> arrayList_copy; //recycler view에 올라갈 전체 meet 데이터들
-    private CustomAdapter customAdapter;
-
-    private FirebaseDatabase database;
-    private DatabaseReference databaseReference,databaseReference2;
-
-    private List<String> list_search; //자동완성 단어들을 담을 리스트
-    private AutoCompleteTextView autoCompleteTextView; //검색어입력창
-    private SearchView searchView; //검색어 입력 창
-    private SearchAdapter searchAdapter;
-    private EditText editSearch;//검색어를 입력할 Input창
-    private ListView listView;//검색을 보여줄 리스변수
-
-    //2021-08-16 검색기능 구현
-    private List<String> list_search_recycle; //검색후에도 갱신될 검색창 데이터들
-    private ArrayList<String> arrayList_search_recycle; //모든 검색창 데이터들
-
-    private DatabaseReference mDatabase;//나의 모임
-
-
-
-
-    @Nullable
-    @org.jetbrains.annotations.Nullable
-    @Override
-    public View onCreateView(@NonNull @NotNull LayoutInflater inflater, @Nullable @org.jetbrains.annotations.Nullable ViewGroup container, @Nullable @org.jetbrains.annotations.Nullable Bundle savedInstanceState) {
-        ViewGroup vGroup = (ViewGroup) inflater.inflate(R.layout.activity_main_home_my, container, false);
-
-        recyclerView=vGroup.findViewById(R.id.recyclerView);
-        recyclerView.setHasFixedSize(true);//기존 리사이클러뷰의 성능 강화
-        layoutManager = new LinearLayoutManager(getContext());
-        recyclerView.setLayoutManager(layoutManager);
-        arrayList = new ArrayList<>();//Meet객체를 담을 어레이리스트 (어뎁터 쪽으로)
-        arrayList_copy = new ArrayList<>();
-
-
-
-        //Button btn_back= vGroup.findViewById(R.id.btn_back);
-        Button btn_search= vGroup.findViewById(R.id.btn_search);
-
-
-
-        //2021-08-16 검색기능 구현
-        list_search_recycle= new ArrayList<String>();
-        arrayList_search_recycle= new ArrayList<String>();//리스트의 모든 데이터를 arraylist_search에 복사
-
-        //2021-09-14 내가만든 방
-        //basicQueryValueListener();
-
-
-        //data
-        //database=FirebaseDatabase.getInstance();
-        //databaseReference=database.getReference("meet");//DB Table Connect
-
-        databaseReference2 = FirebaseDatabase.getInstance().getReference();
-
-
-        String myUserId = FirebaseAuth.getInstance().getCurrentUser().getUid();
-
-        Query myTopPostsQuery = databaseReference2.child("user-meets").child(myUserId)
-                .orderByChild("title");
-
-        myTopPostsQuery.addValueEventListener(new ValueEventListener() {
-            @Override
-            public void onDataChange(@NonNull  DataSnapshot dataSnapshot) {
-                //실제적으로 파이어베이스 데이터베이스의 데이터를 받아오는 곳
-                arrayList.clear(); //기존 배열리스트가 존재하지 않게 초기화
-                for (DataSnapshot snapshot : dataSnapshot.getChildren()){//반복문으로 데이터 List를 추출해냄.
-
-                    Meet meet = snapshot.getValue(Meet.class); // 만들어놨던 Meet 객체에 데이터를 담는다.
-
-                    arrayList.add(meet); //담은 데이터들을 배열리스트에 넣고 리사이클러뷰로 보낼 준비.
-                    Log.d("arrayList", String.valueOf(arrayList));
-
-                    arrayList_copy.addAll(arrayList);//arrayList_copy에 복사
-
-                    //단어 검색
-                    //2021-08-16 검색기능 구현
-                    // meet의 값이 null값이 아니면, list_search_recycle이라는 리스트에 넣어라.
-                    if (meet.title!=null){
-                        list_search_recycle.add(meet.title);//list_search_recycle에 title값 저장
-                        //취미목록 검색 리스트에 넣기 2021-09-13
-                        int totalHobbyCount2 = meet.hobbyCate.size();
-                        for (int index = 0; index < totalHobbyCount2; index++) {
-                            list_search_recycle.add(meet.hobbyCate.get(index)); //hobbyCate의 배열값을 넣는다.
-                        }
-
-                    }
-                }
-
-                //2021-08-16 검색기능 구현
-                arrayList_search_recycle.addAll(list_search_recycle);//제목으로 모임검색 구현,복사해준다.
-
-                customAdapter= new CustomAdapter(arrayList,getContext());
-                recyclerView.setAdapter(customAdapter);
-
-
-                //test
-                for (int i=0;i<arrayList_copy.size();i++){
-                    Log.d("arrayList_copy vaule", String.valueOf(arrayList_copy.get(i).getTitle()));
-                }
-            }
-
-            @Override
-            public void onCancelled(@NonNull  DatabaseError error) {
-                //디비를 가져오는 도중 에러 발생 시
-                Toast.makeText(getContext(),error.getMessage(),Toast.LENGTH_SHORT).show();
-                Log.e("MainActivityHome",String.valueOf(error.toException()));
-
-            }
-        });
-
-
-        //검색기능
-        editSearch=(EditText)vGroup.findViewById(R.id.editSearch);
-        listView=(ListView)vGroup.findViewById(R.id.listView);
-
-
-        //arrayList_search.addAll(list_search); 궅이 필요 x 제거해도 된다.
-        searchAdapter = new SearchAdapter(list_search_recycle,getContext());
-        listView.setAdapter(searchAdapter);
-        editSearch.addTextChangedListener(new TextWatcher() {
-            @Override
-            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
-                //입력하기 전에 조치
-            }
-
-            @Override
-            public void onTextChanged(CharSequence s, int start, int before, int count) {
-                //입력란에 변화가 있을 시 조치
-                listView.setVisibility(View.VISIBLE);
-
-            }
-
-            @Override
-            public void afterTextChanged(Editable s) {
-                //입력이 끝났을 때
-                // input창에 문자를 입력할때마다 호출된다.
-                // search 메소드를 호출한다.
-                String searchText = editSearch.getText().toString();
-                searchInMeet(searchText);
-
-                //2021-08-16 검색기능 구현
-                //검색된 단어가 제목에 들어가는 게시물 띄어보이기(recycler view)
-                //검색한 단어와 meetName이 같은 모임만 다시 띄운다.
-                //customAdapter= new CustomAdapter(arrayList_search_recycle,getContext());
-                //recyclerView.setAdapter(customAdapter);
-
-            }
-
-        });
-
-        //검색버튼 클릭하면면
-        btn_search.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                String searchText =editSearch.getText().toString();//검색어를 가져와서
-                searchInMeetToRecyclerView(searchText);//검색기능 메서드호출
-
-            }
-        });
-        return vGroup;
-    }
-
-    //검색기능메서드
-    private void searchInMeet(String searchText) {
-
-        list_search_recycle.clear();//되랏, 수박 등 실제 meet에서 가져온 정보들 list_search와 동일
-
-         //문자 입력이 없을때는 모든 데이터를 보여준다.
-        if (searchText.length()==0){
-            list_search_recycle.addAll(arrayList_search_recycle);//list_search_recycler실제 검색이 끝난 후 리스트, arrayList_search_recycle: 모든 값이 들어있는 리스트
-
-        }
-        //문자 입력 있을 때
-        else {
-            // 리스트의 모든 데이터를 검색
-            for (int i=0;i<arrayList_search_recycle.size();i++){
-
-                // arraylist_search의 모든 데이터에 입력받은 단어(searchText)가 포함되어 있으면 true를 반환
-                if(arrayList_search_recycle.get(i).toLowerCase().contains(searchText)){
-                    list_search_recycle.add(arrayList_search_recycle.get(i));//검색된 데이터를 리스트에 추가
-                    //검색한 값만 잘 들어온다.
-                    Log.d("list_search_recycle", String.valueOf(list_search_recycle));
-
-                }
-            }//for
-        }//else
-        searchAdapter.notifyDataSetChanged();
-
-    }
-
-    //검색기능-> recyclerview
-    private void searchInMeetToRecyclerView(String searchText) {
-
-        arrayList.clear();//되랏, 수박 등 실제 meet에서 가져온 정보들 list_search와 동일
-
-        //문자 입력이 없을때는 모든 데이터를 보여준다.
-        if (searchText.length()==0){
-            arrayList.addAll(arrayList_copy);
-            Log.d("arrayList_copy_method", String.valueOf(arrayList));//값이 안나온다
-
-        }
-        //문자 입력 있을 때
-        else {
-            // 리스트의 모든 데이터를 검색
-            for (int i=0;i<arrayList_copy.size();i++){
-
-                // arraylist_search의 모든 데이터에 입력받은 단어(searchText)가 포함되어 있으면 true를 반환
-                if(arrayList_copy.get(i).getTitle().toLowerCase().contains(searchText)){
-                    if (UniqueCheckAndAdd(arrayList,arrayList_copy.get(i)) == true){
-                        arrayList.add(arrayList_copy.get(i));//검색된 데이터를 리스트에 추가
-                        //검색한 값만 잘 들어온다.
-                        Log.d("arrayList_new", String.valueOf(arrayList));
-                        Log.d("size", String.valueOf(arrayList_copy.size()));//253??
-                    }
-                }
-                // 취미목록으로 검색클릭하면 recyclerview에 반영
-                for (int j=0; j<arrayList_copy.get(i).getHobbyCate().size(); j++){
-                    if(arrayList_copy.get(i).getHobbyCate().get(j).toLowerCase().contains(searchText)){
-                        if (UniqueCheckAndAdd(arrayList,arrayList_copy.get(i)) == true){
-                            arrayList.add(arrayList_copy.get(i));//검색된 데이터를 리스트에 추가
-                            //검색한 값만 잘 들어온다.
-                            Log.d("arrayList_new", String.valueOf(arrayList));
-                            Log.d("size", String.valueOf(arrayList_copy.size()));//253??
-                        }
-                    }
-                }
-
-            }//for
-        }//else
-        //arrayList_uniqe = new ArrayList<>();
-        //arrayList_uniqe = new Set<arrayList>();
-        customAdapter.notifyDataSetChanged();
-
-    }
-    public boolean UniqueCheckAndAdd(ArrayList<Meet> array, Meet meetPresent){
-        return !array.contains(meetPresent);
-    }
-
-    //filtering databaseReference = "meet" hobbyCate 로 필터링
-    // test : meet age로 필터링
-    public void basicQueryValueListener() {
-        String myUserId = FirebaseAuth.getInstance().getCurrentUser().getUid();
-        Log.d("myUserId",myUserId);
-        Query myTopPostsQuery = databaseReference2.child("user-meets").child(myUserId);
-                //.orderByChild("title");
-
-        // [START basic_query_value_listener]
-        // My top posts by number of stars
-        myTopPostsQuery.addValueEventListener(new ValueEventListener() {
-            @Override
-            public void onDataChange(DataSnapshot dataSnapshot) {
-                dataSnapshot.getKey();
-
-                for (DataSnapshot postSnapshot: dataSnapshot.getChildren()) {
-                    // TODO: handle the post
-                    arrayList.clear(); //기존 배열리스트가 존재하지 않게 초기화
-                    for (DataSnapshot snapshot : dataSnapshot.getChildren()){//반복문으로 데이터 List를 추출해냄.
-
-                        Meet meet = snapshot.getValue(Meet.class); // 만들어놨던 Meet 객체에 데이터를 담는다.
-
-                        arrayList.add(meet); //담은 데이터들을 배열리스트에 넣고 리사이클러뷰로 보낼 준비.
-                        Log.d("arrayList", String.valueOf(arrayList));
-
-                        arrayList_copy.addAll(arrayList);//arrayList_copy에 복사
-
-                        //단어 검색
-                        //2021-08-16 검색기능 구현
-                        // meet의 값이 null값이 아니면, list_search_recycle이라는 리스트에 넣어라.
-                        if (meet.title!=null){
-                            list_search_recycle.add(meet.title);//list_search_recycle에 title값 저장
-                            //취미목록 검색 리스트에 넣기 2021-09-13
-                            int totalHobbyCount2 = meet.hobbyCate.size();
-                            for (int index = 0; index < totalHobbyCount2; index++) {
-                                list_search_recycle.add(meet.hobbyCate.get(index)); //hobbyCate의 배열값을 넣는다.
-                            }
-
-                        }
-                    }
-
-                    //2021-08-16 검색기능 구현
-                    arrayList_search_recycle.addAll(list_search_recycle);//제목으로 모임검색 구현,복사해준다.
-
-                    customAdapter= new CustomAdapter(arrayList,getContext());
-                    recyclerView.setAdapter(customAdapter);
-
-
-                    //test
-                    for (int i=0;i<arrayList_copy.size();i++){
-                        Log.d("arrayList_copy vaule", String.valueOf(arrayList_copy.get(i).getTitle()));
-                    }
-                }
-            }
-
-            @Override
-            public void onCancelled(DatabaseError databaseError) {
-                // Getting Post failed, log a message
-                Log.w(TAG, "loadPost:onCancelled", databaseError.toException());
-                // ...
-            }
-        });
-        // [END basic_query_value_listener]
-    }
-}
\ No newline at end of file
Index: app/src/main/res/layout/select_hobby2_grid_in.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:id=\"@+id/selectHobbyIn\" >\r\n\r\n    <TextView\r\n        android:id=\"@+id/tv_hobby\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"음악\"\r\n        android:textSize=\"20dp\"/>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"horizontal\">\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/recyclerViewVertical\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"match_parent\"/>\r\n\r\n        <!--        <GridView-->\r\n        <!--            android:layout_width=\"match_parent\"-->\r\n        <!--            android:layout_height=\"match_parent\" />-->\r\n    </LinearLayout>\r\n    <LinearLayout\r\n        android:id=\"@+id/toolbar_division\"\r\n        android:background=\"@color/yellow\"\r\n        android:orientation=\"horizontal\"\r\n        android:layout_below=\"@+id/my_toolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"1dp\">\r\n    </LinearLayout>\r\n    <Space\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"2dp\"\r\n        />\r\n\r\n\r\n\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/select_hobby2_grid_in.xml	(revision 61518bda48947942801de4706066db5509a396cd)
+++ app/src/main/res/layout/select_hobby2_grid_in.xml	(date 1631757208009)
@@ -28,7 +28,6 @@
     </LinearLayout>
     <LinearLayout
         android:id="@+id/toolbar_division"
-        android:background="@color/yellow"
         android:orientation="horizontal"
         android:layout_below="@+id/my_toolbar"
         android:layout_width="match_parent"
Index: app/src/main/java/com/cookandroid/withmetabbar/certify/JoinStartFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cookandroid.withmetabbar.certify;\r\n\r\nimport android.content.Intent;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport com.cookandroid.withmetabbar.DaumWebViewActivity;\r\nimport com.cookandroid.withmetabbar.MainActivity;\r\nimport com.cookandroid.withmetabbar.R;\r\nimport com.cookandroid.withmetabbar.model.Member;\r\nimport com.cookandroid.withmetabbar.navigation.FragmentPlusSelectHobby;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.OutputStreamWriter;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class JoinStartFragment extends Fragment {\r\n\r\n    Button btn_join,btn_live;\r\n    ArrayList<String> list = new ArrayList<>();\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n\r\n        ViewGroup vGroup = (ViewGroup) inflater.inflate(R.layout.join_start_fragment, container, false);\r\n        EditText etId = vGroup.findViewById(R.id.etId);\r\n        EditText etPw = vGroup.findViewById(R.id.etPw);\r\n        EditText etName = vGroup.findViewById(R.id.etName);\r\n        EditText etNick = vGroup.findViewById(R.id.etNick);\r\n        EditText etBirth = vGroup.findViewById(R.id.etBirth);\r\n        EditText etAge = vGroup.findViewById(R.id.etAge);\r\n        EditText etPhoneNum = vGroup.findViewById(R.id.etPhoneNum);\r\n        btn_join= vGroup.findViewById(R.id.button6);\r\n        btn_live = vGroup.findViewById(R.id.btn_live);\r\n        CheckBox cb_male = vGroup.findViewById(R.id.check_male);\r\n        CheckBox cb_female = vGroup.findViewById(R.id.check_female);\r\n        CheckBox cb_no = vGroup.findViewById(R.id.checkNo);\r\n        EditText etHobby =vGroup.findViewById(R.id.etHobby);\r\n\r\n        Bundle bundle = getArguments();\r\n\r\n        try {\r\n            if (bundle.getStringArrayList(\"hobby\")!=null){\r\n                list = bundle.getStringArrayList(\"hobby\");\r\n                Log.d(\"getBundleInPlus\", String.valueOf(bundle.getStringArrayList(\"hobby\")));\r\n                //받은 취미 목록을 차례로 tv에 입력\r\n                int totalHobbyCount = list.size();\r\n                for (int index =0; index<totalHobbyCount; index++){\r\n                    etHobby.append(\",\"+list.get(index));\r\n                }\r\n\r\n            }else {\r\n                etHobby.setText(\"클릭하세요.\");\r\n            }\r\n        }catch (NullPointerException e){\r\n            Toast.makeText(getContext(),\"null\",Toast.LENGTH_SHORT);\r\n        }\r\n\r\n\r\n\r\n        btn_live.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                DaumWebViewActivity daumWebViewActivity = new DaumWebViewActivity();\r\n                ((MainActivity2)getActivity()).replaceFragment(daumWebViewActivity);\r\n            }\r\n        });\r\n\r\n        //취미선택\r\n        etHobby.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                FragmentSelectHobby2 fragmentSelectHobby2= new FragmentSelectHobby2();\r\n                ((MainActivity2)getActivity()).addFragment(fragmentSelectHobby2);\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n        btn_join.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (etId.getText().toString() == null || etName.getText().toString() == null || etPw.getText().toString() == null){\r\n\r\n                    Toast.makeText(getContext(),\"정보 입력을 완료하세요 :)\",Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                FirebaseAuth.getInstance()\r\n                        .createUserWithEmailAndPassword(etId.getText().toString(),etPw.getText().toString())\r\n                        .addOnCompleteListener(getActivity(), new OnCompleteListener<AuthResult>() {\r\n\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<AuthResult> task) {\r\n                                if (task.isSuccessful()){\r\n                                    final String uid = task.getResult().getUser().getUid();\r\n                                    Member member = new Member();\r\n                                    member.uid =FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n                                    member.id = etId.getText().toString().trim();\r\n                                    member.pw = etPw.getText().toString().trim();\r\n                                    member.mName = etName.getText().toString().trim();\r\n                                    member.nick =etNick.getText().toString().trim();\r\n                                    member.mAge = Integer.parseInt(etAge.getText().toString());\r\n                                    //성별체크\r\n                                    if (cb_male.isChecked()){\r\n                                        member.mGen =1; //남자는 1\r\n                                    }else if (cb_female.isChecked()){\r\n                                        member.mGen =2; //여자는 2\r\n                                    }else if (cb_no.isChecked()){\r\n                                        member.mGen =0; //무관은 0\r\n                                    }else {\r\n                                        Toast.makeText(getContext(),\"성별을 체크하세요.\",Toast.LENGTH_SHORT);\r\n                                    }\r\n\r\n                                    int totalHobbyCount2 = list.size();\r\n                                    for (int index = 0; index < totalHobbyCount2; index++) {\r\n                                        member.hobbyCate.add(list.get(index));\r\n                                    }\r\n\r\n\r\n                                    //member.meetDate\r\n                                    FirebaseDatabase.getInstance().getReference().child(\"users\").child(uid).setValue(member).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n\r\n                                        @Override\r\n                                        public void onSuccess(Void aVoid) {\r\n                                            //프래그먼트 종료\r\n                                            FragmentManager fragmentManager = getActivity().getSupportFragmentManager();\r\n                                            fragmentManager.beginTransaction().remove(JoinStartFragment.this).commit();\r\n//                                            FragmentSelectHobby fragmentSelectHobby= new FragmentSelectHobby();\r\n//                                            ((MainActivity2)getActivity()).replaceFragment(fragmentSelectHobby);\r\n//                                            fragmentManager.popBackStack();\r\n                                            Intent intent = new Intent(getContext(), MainActivity.class);\r\n                                            startActivity(intent);\r\n                                        }\r\n                                    });\r\n                                }else{\r\n                                    Log.e(TAG, \"Error getting sign in methods for user\", task.getException());\r\n                                }\r\n                            }\r\n                        });\r\n            }\r\n        });\r\n\r\n        return vGroup;\r\n    }\r\n\r\n    //이부분 데이터 TaskJOin 수정\r\n    public class TaskJoin extends AsyncTask<String, Void, String> {\r\n        String sendMsg, receiveMsg;\r\n        String serverIp = \"http://13.125.233.177:8080/AppWithMe/member/insert.jsp\";\r\n\r\n        @Override\r\n        protected String doInBackground(String... strings) {//뒤에서 돌아가는 가장 중요한 메소드\r\n            try {\r\n                String str;\r\n                URL url = new URL(serverIp);\r\n                HttpURLConnection conn = (HttpURLConnection) url.openConnection();\r\n                conn.setRequestProperty(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                conn.setRequestMethod(\"POST\");//POST 방식, GET방식으로 넘겨주면 한글처리부터 문제가 생기게 됨\r\n                OutputStreamWriter osw = new OutputStreamWriter(conn.getOutputStream());\r\n                //sendMsg = \"memberId=\"+ strings[0]+\"&password=\"+ strings[1];\r\n\r\n                //sendMsg = \"meetId=\"+ strings[0]+\"&meetName=\"+ strings[1];\r\n                sendMsg = \"memberId=\"+ strings[0]+\"&password=\"+ strings[1]+\"&memberName=\"+ strings[2]+\"&phoneNum=\"+ strings[3]\r\n                        +\"&birth=\"+ strings[4];\r\n                osw.write(sendMsg);\r\n                osw.flush();\r\n                if(conn.getResponseCode() == HttpURLConnection.HTTP_OK) {\r\n                    InputStreamReader tmp = new InputStreamReader(conn.getInputStream(), StandardCharsets.UTF_8);//UTF-8로 데이터 읽어옴\r\n                    BufferedReader reader = new BufferedReader(tmp);\r\n                    StringBuffer buffer = new StringBuffer();\r\n                    while ((str = reader.readLine()) != null) {\r\n                        buffer.append(str);\r\n                    }\r\n                    receiveMsg = buffer.toString();\r\n                } else {\r\n                    Log.i(\"통신 결과\", conn.getResponseCode()+\"에러\");\r\n                }\r\n            } catch (MalformedURLException e) {\r\n                e.printStackTrace();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            return receiveMsg;//String 타입인데 안에 형식이 json임\r\n        }\r\n\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cookandroid/withmetabbar/certify/JoinStartFragment.java	(revision 61518bda48947942801de4706066db5509a396cd)
+++ app/src/main/java/com/cookandroid/withmetabbar/certify/JoinStartFragment.java	(date 1631760633052)
@@ -1,5 +1,6 @@
 package com.cookandroid.withmetabbar.certify;
 
+import android.app.DatePickerDialog;
 import android.content.Intent;
 import android.os.AsyncTask;
 import android.os.Bundle;
@@ -9,6 +10,7 @@
 import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.CheckBox;
+import android.widget.DatePicker;
 import android.widget.EditText;
 import android.widget.Toast;
 
@@ -21,7 +23,6 @@
 import com.cookandroid.withmetabbar.MainActivity;
 import com.cookandroid.withmetabbar.R;
 import com.cookandroid.withmetabbar.model.Member;
-import com.cookandroid.withmetabbar.navigation.FragmentPlusSelectHobby;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
@@ -37,14 +38,18 @@
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.nio.charset.StandardCharsets;
-import java.util.ArrayList;
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.Locale;
 
 import static android.content.ContentValues.TAG;
 
 public class JoinStartFragment extends Fragment {
 
     Button btn_join,btn_live;
-    ArrayList<String> list = new ArrayList<>();
+    private Date meetDate;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -68,27 +73,7 @@
         CheckBox cb_male = vGroup.findViewById(R.id.check_male);
         CheckBox cb_female = vGroup.findViewById(R.id.check_female);
         CheckBox cb_no = vGroup.findViewById(R.id.checkNo);
-        EditText etHobby =vGroup.findViewById(R.id.etHobby);
-
-        Bundle bundle = getArguments();
-
-        try {
-            if (bundle.getStringArrayList("hobby")!=null){
-                list = bundle.getStringArrayList("hobby");
-                Log.d("getBundleInPlus", String.valueOf(bundle.getStringArrayList("hobby")));
-                //받은 취미 목록을 차례로 tv에 입력
-                int totalHobbyCount = list.size();
-                for (int index =0; index<totalHobbyCount; index++){
-                    etHobby.append(","+list.get(index));
-                }
-
-            }else {
-                etHobby.setText("클릭하세요.");
-            }
-        }catch (NullPointerException e){
-            Toast.makeText(getContext(),"null",Toast.LENGTH_SHORT);
-        }
-
+        EditText et_Birth = vGroup.findViewById(R.id.etBirth);
 
 
         btn_live.setOnClickListener(new View.OnClickListener() {
@@ -96,19 +81,62 @@
             public void onClick(View v) {
                 DaumWebViewActivity daumWebViewActivity = new DaumWebViewActivity();
                 ((MainActivity2)getActivity()).replaceFragment(daumWebViewActivity);
+                //LivePlaceFragment livePlaceFragment= new LivePlaceFragment();
+                //((MainActivity2)getActivity()).replaceFragment(livePlaceFragment);
             }
         });
 
-        //취미선택
-        etHobby.setOnClickListener(new View.OnClickListener() {
+
+        //날짜 선택
+
+        Calendar myCalendar = Calendar.getInstance();
+        DatePickerDialog.OnDateSetListener myDatePicker = new DatePickerDialog.OnDateSetListener() {
+            @Override
+            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {
+                myCalendar.set(Calendar.YEAR, year);
+                myCalendar.set(Calendar.MONTH, month);
+                myCalendar.set(Calendar.DAY_OF_MONTH, dayOfMonth);
+                updateLabel();
+                meetDate=myCalendar.getTime();
+//                meetDate.setYear( myCalendar.get(Calendar.YEAR));
+//                meetDate.setMonth( myCalendar.get(Calendar.MONTH));
+//                meetDate.setDate( myCalendar.get(Calendar.DAY_OF_MONTH) );
+            }
+
+            private void updateLabel() {
+                String myFormat = "yyyy/MM/dd";    // 출력형식   2018/11/28
+                SimpleDateFormat sdf = new SimpleDateFormat(myFormat, Locale.KOREA); //string형태로 바뀐다.
+
+                et_Birth.setText(sdf.format(myCalendar.getTime()));
+                DateFormat sdFormat = new SimpleDateFormat("yyyy-MM-dd");//필요x
+
+                //데이터 firebase저장위해 meetDate 변수에 대입
+                try {
+                    //meetDate=myCalendar.getTime(); //캘린더타입
+                    //meetDate.=myCalendar.get(Calendar.DAY_OF_MONTH);
+
+                    //meetDate.setYear(myCalendar.get(Calendar.YEAR));//년
+                    //meetDate.setMonth(myCalendar.get(Calendar.MONTH));//월
+                    //meetDate.setDate(myCalendar.get(Calendar.DAY_OF_MONTH));//일
+
+                    //meetDate=myCalendar.get(Calendar.YEAR);
+                    //meetDate=myCalendar.get(Calendar.DAY_OF_WEEK);
+
+                    Log.d("meetDate", String.valueOf(meetDate));
+                } catch (Exception e) {
+                    e.printStackTrace();
+                }
+            }
+        };
+
+        //생년월일 선택
+        et_Birth.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-
-                FragmentSelectHobby2 fragmentSelectHobby2= new FragmentSelectHobby2();
-                ((MainActivity2)getActivity()).addFragment(fragmentSelectHobby2);
-
+                new DatePickerDialog(getContext(), myDatePicker, myCalendar.get(Calendar.YEAR), myCalendar.get(Calendar.MONTH), myCalendar.get(Calendar.DAY_OF_MONTH)).show();
             }
         });
+
 
 
 
@@ -135,6 +163,7 @@
                                     member.mName = etName.getText().toString().trim();
                                     member.nick =etNick.getText().toString().trim();
                                     member.mAge = Integer.parseInt(etAge.getText().toString());
+                                    member.meetDate =meetDate;
                                     //성별체크
                                     if (cb_male.isChecked()){
                                         member.mGen =1; //남자는 1
@@ -146,11 +175,6 @@
                                         Toast.makeText(getContext(),"성별을 체크하세요.",Toast.LENGTH_SHORT);
                                     }
 
-                                    int totalHobbyCount2 = list.size();
-                                    for (int index = 0; index < totalHobbyCount2; index++) {
-                                        member.hobbyCate.add(list.get(index));
-                                    }
-
 
                                     //member.meetDate
                                     FirebaseDatabase.getInstance().getReference().child("users").child(uid).setValue(member).addOnSuccessListener(new OnSuccessListener<Void>() {
@@ -160,11 +184,11 @@
                                             //프래그먼트 종료
                                             FragmentManager fragmentManager = getActivity().getSupportFragmentManager();
                                             fragmentManager.beginTransaction().remove(JoinStartFragment.this).commit();
-//                                            FragmentSelectHobby fragmentSelectHobby= new FragmentSelectHobby();
-//                                            ((MainActivity2)getActivity()).replaceFragment(fragmentSelectHobby);
+                                            FragmentSelectHobby fragmentSelectHobby= new FragmentSelectHobby();
+                                            ((MainActivity2)getActivity()).replaceFragment(fragmentSelectHobby);
 //                                            fragmentManager.popBackStack();
-                                            Intent intent = new Intent(getContext(), MainActivity.class);
-                                            startActivity(intent);
+//                                            Intent intent = new Intent(getContext(), MainActivity.class);
+//                                            startActivity(intent);
                                         }
                                     });
                                 }else{
Index: app/src/main/res/layout/list_meet.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"vertical\">\r\n\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        >\r\n        <ImageView\r\n            android:id=\"@+id/iv_meet\"\r\n            android:layout_width=\"80dp\"\r\n            android:layout_height=\"88dp\"\r\n            android:layout_margin=\"5dp\"\r\n            android:src=\"@drawable/ic_launcher_background\"/>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"15dp\"\r\n            android:orientation=\"vertical\">\r\n            <TextView\r\n                android:id=\"@+id/tv_meetTitle\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"방제목\"\r\n                android:textColor=\"@color/black\"\r\n                android:layout_margin=\"5dp\">\r\n\r\n            </TextView>\r\n            <TextView\r\n                android:id=\"@+id/tv_meetDate\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"시간\"\r\n                android:textColor=\"@color/black\"\r\n                android:layout_margin=\"5dp\">\r\n\r\n            </TextView>\r\n            <TextView\r\n                android:id=\"@+id/tv_meetAge\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"나이\"\r\n                android:textColor=\"@color/black\"\r\n                android:layout_margin=\"5dp\">\r\n\r\n            </TextView>\r\n            <TextView\r\n                android:id=\"@+id/tv_meetGen\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"성별\"\r\n                android:textColor=\"@color/black\"\r\n                android:layout_margin=\"5dp\">\r\n\r\n            </TextView>\r\n            <TextView\r\n                android:id=\"@+id/tv_meetId\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"모임아이디\"\r\n                android:textColor=\"@color/black\"\r\n                android:layout_margin=\"5dp\">\r\n\r\n            </TextView>\r\n            <TextView\r\n                android:id=\"@+id/tv_numMember\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"모임인원\"\r\n                android:textColor=\"@color/black\"\r\n                android:layout_margin=\"5dp\">\r\n\r\n            </TextView>\r\n            <TextView\r\n                android:id=\"@+id/tv_content\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"내용\"\r\n                android:textColor=\"@color/black\"\r\n                android:layout_margin=\"5dp\">\r\n            </TextView>\r\n\r\n        </LinearLayout>\r\n\r\n\r\n\r\n\r\n\r\n    </LinearLayout>\r\n\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/list_meet.xml	(revision 61518bda48947942801de4706066db5509a396cd)
+++ app/src/main/res/layout/list_meet.xml	(date 1631757208009)
@@ -85,12 +85,25 @@
                 android:layout_margin="5dp">
             </TextView>
 
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="2dp"
+                android:background="@color/yellow"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:layout_marginTop="10dp"
+                android:orientation="horizontal">
+
+            </LinearLayout>
+
         </LinearLayout>
 
 
 
 
 
+
+
     </LinearLayout>
 
 
Index: app/src/main/res/layout/join_start_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:gravity=\"center\"\r\n        android:layout_gravity=\"center\"\r\n        android:text=\"With Me 회원가입\"\r\n        android:textColor=\"@color/Orange\"\r\n        android:layout_marginTop=\"40dp\"\r\n        android:textSize=\"25dp\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"center\"\r\n        android:orientation=\"vertical\">\r\n\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:layout_gravity=\"center\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <EditText\r\n                android:id=\"@+id/etId\"\r\n                android:layout_width=\"210dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"50dp\"\r\n                android:ems=\"10\"\r\n                android:hint=\"아이디\"\r\n                android:inputType=\"textPersonName\"\r\n                android:textSize=\"15dp\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/button1\"\r\n                android:layout_width=\"90dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:backgroundTint=\"@color/Orange\"\r\n                android:text=\"중복확인\"\r\n                android:textSize=\"12dp\" />\r\n\r\n\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <EditText\r\n                android:id=\"@+id/etPw\"\r\n                android:layout_width=\"210dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"50dp\"\r\n                android:ems=\"10\"\r\n                android:hint=\"비밀번호\"\r\n                android:inputType=\"textPersonName\"\r\n                android:textSize=\"15dp\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/button2\"\r\n                android:layout_width=\"90dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:backgroundTint=\"@color/Orange\"\r\n                android:text=\"중복확인\"\r\n                android:textSize=\"12dp\" />\r\n\r\n\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"30dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <EditText\r\n                android:id=\"@+id/etName\"\r\n                android:layout_width=\"210dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"20dp\"\r\n                android:ems=\"10\"\r\n                android:inputType=\"textPersonName\"\r\n                android:textSize=\"15dp\"\r\n                android:hint=\"이름\"\r\n                />\r\n\r\n            <CheckBox\r\n                android:id=\"@+id/check_male\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"남\" />\r\n            <CheckBox\r\n                android:id=\"@+id/check_female\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"여\" />\r\n            <CheckBox\r\n                android:id=\"@+id/checkNo\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"무관\" />\r\n\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"30dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n        <EditText\r\n            android:id=\"@+id/etNick\"\r\n            android:layout_width=\"300dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"20dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"닉네임\"\r\n            android:inputType=\"textPersonName\"\r\n            android:textSize=\"15dp\" />\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"30dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n        <EditText\r\n            android:id=\"@+id/etBirth\"\r\n            android:layout_width=\"300dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"20dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"생년월일\"\r\n            android:inputType=\"textPersonName\"\r\n            android:textSize=\"15dp\" />\r\n        </LinearLayout>\r\n\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"30dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n        <EditText\r\n            android:id=\"@+id/etAge\"\r\n            android:layout_width=\"300dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"20dp\"\r\n            android:ems=\"10\"\r\n            android:inputType=\"textPersonName\"\r\n            android:textSize=\"15dp\"\r\n            android:hint=\"나이\" />\r\n\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <EditText\r\n                android:id=\"@+id/etPhoneNum\"\r\n                android:layout_width=\"300dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"50dp\"\r\n                android:ems=\"10\"\r\n                android:inputType=\"textPersonName\"\r\n                android:textSize=\"15dp\"\r\n                android:hint=\"휴대폰번호\" />\r\n\r\n\r\n        </LinearLayout>\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"horizontal\">\r\n\r\n\r\n            <TextView\r\n                android:id=\"@+id/textView3\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"bottom\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"취미분야\"\r\n                android:layout_marginLeft=\"20dp\"\r\n                android:textSize=\"16dp\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/etHobby\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:ems=\"10\"\r\n                android:gravity=\"center\"\r\n                android:inputType=\"textPersonName\"\r\n                android:layout_marginRight=\"20dp\"\r\n                android:text=\"\" />\r\n\r\n        </LinearLayout>\r\n\r\n\r\n\r\n        <Button\r\n            android:id=\"@+id/btn_live\"\r\n            android:layout_width=\"300dp\"\r\n            android:layout_height=\"60dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginLeft=\"50dp\"\r\n            android:backgroundTint=\"@color/gray\"\r\n            android:textSize=\"16dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"거주지역 선택\"\r\n            />\r\n        <Button\r\n            android:id=\"@+id/button4\"\r\n            android:layout_width=\"300dp\"\r\n            android:layout_height=\"60dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginLeft=\"50dp\"\r\n            android:backgroundTint=\"@color/gray\"\r\n            android:textSize=\"16dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"관심지역 선택\"\r\n            />\r\n\r\n        <Button\r\n            android:id=\"@+id/button5\"\r\n            android:layout_width=\"300dp\"\r\n            android:layout_height=\"60dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginLeft=\"50dp\"\r\n            android:backgroundTint=\"@color/gray\"\r\n            android:textSize=\"16dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"관심지역 선택\" />\r\n    </LinearLayout>\r\n\r\n        <Button\r\n            android:id=\"@+id/button6\"\r\n            android:layout_width=\"200dp\"\r\n            android:layout_height=\"45dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:layout_gravity=\"center\"\r\n            android:backgroundTint=\"@color/Orange\"\r\n            android:textSize=\"18dp\"\r\n            android:gravity=\"center\"\r\n            android:text=\"가입하기\"\r\n            />\r\n\r\n\r\n\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/join_start_fragment.xml	(revision 61518bda48947942801de4706066db5509a396cd)
+++ app/src/main/res/layout/join_start_fragment.xml	(date 1631757208008)
@@ -144,6 +144,9 @@
             android:layout_height="wrap_content"
             android:layout_marginLeft="20dp"
             android:ems="10"
+            android:clickable="true"
+            android:editable="false"
+            android:focusable="false"
             android:hint="생년월일"
             android:inputType="textPersonName"
             android:textSize="15dp" />
Index: app/src/main/java/com/cookandroid/withmetabbar/model/Member.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cookandroid.withmetabbar.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class Member {\r\n\r\n    public String uid;\r\n    public String id;\r\n    public String pw;\r\n    public String mName;\r\n    public String nick;\r\n    public int mAge;\r\n    public int mGen;\r\n    public int mDegree;//매너온도\r\n    public String profileImageUrl;\r\n    public ArrayList<String> hobbyCate = new ArrayList<>();\r\n\r\n    //2021.09.06\r\n    public Map<String, Hobby> mHobbyList = new HashMap<>(); // member의 관심 취미 리스트\r\n\r\n    public Member(){\r\n\r\n    }\r\n\r\n    public Member(String uid, String id, String pw, String mName, String nick, int mAge, String profileImageUrl) {\r\n        this.uid = uid;\r\n        this.id = id;\r\n        this.pw = pw;\r\n        this.mName = mName;\r\n        this.nick = nick;\r\n        this.mAge = mAge;\r\n        this.profileImageUrl = profileImageUrl;\r\n    }\r\n\r\n    public String getUid() {\r\n        return uid;\r\n    }\r\n\r\n    public void setUid(String uid) {\r\n        this.uid = uid;\r\n    }\r\n\r\n    public String getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(String id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getPw() {\r\n        return pw;\r\n    }\r\n\r\n    public void setPw(String pw) {\r\n        this.pw = pw;\r\n    }\r\n\r\n    public String getmName() {\r\n        return mName;\r\n    }\r\n\r\n    public void setmName(String mName) {\r\n        this.mName = mName;\r\n    }\r\n\r\n    public String getNick() {\r\n        return nick;\r\n    }\r\n\r\n    public void setNick(String nick) {\r\n        this.nick = nick;\r\n    }\r\n\r\n    public int getmAge() {\r\n        return mAge;\r\n    }\r\n\r\n    public void setmAge(int mAge) {\r\n        this.mAge = mAge;\r\n    }\r\n\r\n    public int getmGen() {\r\n        return mGen;\r\n    }\r\n\r\n    public void setmGen(int mGen) {\r\n        this.mGen = mGen;\r\n    }\r\n\r\n    public int getmDegree() {\r\n        return mDegree;\r\n    }\r\n\r\n    public void setmDegree(int mDegree) {\r\n        this.mDegree = mDegree;\r\n    }\r\n\r\n    public String getProfileImageUrl() {\r\n        return profileImageUrl;\r\n    }\r\n\r\n    public void setProfileImageUrl(String profileImageUrl) {\r\n        this.profileImageUrl = profileImageUrl;\r\n    }\r\n\r\n    public ArrayList<String> getHobbyCate() {\r\n        return hobbyCate;\r\n    }\r\n\r\n    public void setHobbyCate(ArrayList<String> hobbyCate) {\r\n        this.hobbyCate = hobbyCate;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cookandroid/withmetabbar/model/Member.java	(revision 61518bda48947942801de4706066db5509a396cd)
+++ app/src/main/java/com/cookandroid/withmetabbar/model/Member.java	(date 1631759557927)
@@ -1,6 +1,7 @@
 package com.cookandroid.withmetabbar.model;
 
 import java.util.ArrayList;
+import java.util.Date;
 import java.util.HashMap;
 import java.util.Map;
 
@@ -13,6 +14,7 @@
     public String nick;
     public int mAge;
     public int mGen;
+    public Date meetDate;
     public int mDegree;//매너온도
     public String profileImageUrl;
     public ArrayList<String> hobbyCate = new ArrayList<>();
@@ -113,4 +115,12 @@
     public void setHobbyCate(ArrayList<String> hobbyCate) {
         this.hobbyCate = hobbyCate;
     }
+
+    public Date getMeetDate() {
+        return meetDate;
+    }
+
+    public void setMeetDate(Date meetDate) {
+        this.meetDate = meetDate;
+    }
 }
Index: app/src/main/java/com/cookandroid/withmetabbar/navigation/FragmentPlusSelectHobby.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cookandroid.withmetabbar.navigation;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Parcelable;\r\nimport android.util.Log;\r\nimport android.util.SparseBooleanArray;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.BaseAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.cookandroid.withmetabbar.MainActivity;\r\nimport com.cookandroid.withmetabbar.R;\r\nimport com.cookandroid.withmetabbar.certify.FragmentSelectHobby;\r\nimport com.cookandroid.withmetabbar.certify.JoinStartFragment;\r\nimport com.cookandroid.withmetabbar.certify.MainActivity2;\r\nimport com.cookandroid.withmetabbar.model.Hobby;\r\nimport com.cookandroid.withmetabbar.model.HobbyBig;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport static android.graphics.Color.MAGENTA;\r\nimport static android.graphics.Color.YELLOW;\r\n\r\npublic class FragmentPlusSelectHobby extends Fragment implements OnItemClick{\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    ImageButton imgBtn;\r\n    TextView tv;//취미분야 선택\r\n    ProgressBar progressBar;\r\n    private String selectedHobbyBig;\r\n    Button btnFinish; //메인화면으로 화면전환버튼\r\n    ArrayList<String> list = new ArrayList<>(); //bundle 전달을 위해 선택한 취미값들을 받아서 저장할 배열\r\n\r\n    //중첩 recyclerView에 넣을 데이터\r\n    private final ArrayList<ArrayList<Hobby>> allHobbyList = new ArrayList();\r\n    private final ArrayList<HobbyBig> HobbyBigList2 = new ArrayList();//대분류\r\n\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n\r\n    public FragmentPlusSelectHobby() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment FragmentSelectHobby.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static FragmentSelectHobby newInstance(String param1, String param2) {\r\n        FragmentSelectHobby fragment = new FragmentSelectHobby();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            selectedHobbyBig = getArguments().getString(ARG_PARAM1);\r\n            //mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        ViewGroup vg =  (ViewGroup)inflater.inflate(R.layout.fragment_select_hobby2, container, false);\r\n\r\n        //imgBtn = vg.findViewById(R.id.imageButton);\r\n        tv=vg.findViewById(R.id.textView);\r\n        progressBar=vg.findViewById(R.id.progressBar);\r\n        btnFinish= vg.findViewById(R.id.selectHobby2_btn_next);\r\n\r\n        tv.setText(\"취미 분야 선택 : \"+selectedHobbyBig);\r\n\r\n\r\n        //Log.d(\"selectedHobbyBig\",selectedHobbyBig);\r\n        //final GridView gridView= vg.findViewById(R.id.gridView);\r\n        //ViewGroup vg2 =  (ViewGroup)inflater.inflate(R.layout.select_hobby_grid_in, container, false);\r\n        //iv2= vg2.findViewById(R.id.imageView_sel_hb);\r\n\r\n//        int[] img ={\r\n//                R.drawable.hobby_music,R.drawable.hb_craft,R.drawable.hb_sport\r\n//\r\n//        };\r\n\r\n\r\n\r\n        //바로 해보기\r\n        ArrayList<ArrayList<String>> hbLists = new ArrayList<ArrayList<String>>();\r\n\r\n        ArrayList<String> hbList_music = new ArrayList<>();\r\n        hbList_music.add(\"음악\");\r\n        hbList_music.add(\"클래식\");\r\n        hbList_music.add(\"k-pop\");\r\n        hbList_music.add(\"뉴에이지\");\r\n        hbList_music.add(\"발라드\");\r\n        hbList_music.add(\"랩/힙합\");\r\n        hbList_music.add(\"인디음악\");\r\n        hbList_music.add(\"록/메탈\");\r\n        hbList_music.add(\"포크/블루스\");\r\n\r\n        //2차원배열에 답기\r\n        hbLists.add(hbList_music);\r\n\r\n        //tv.setText((CharSequence) hbLists.get(0).get(0));\r\n\r\n        //응용참고\r\n        /*\r\n        System.out.println(datas.size());\r\n        \t//결과: 3\r\n\t\tSystem.out.println(datas.toString());\r\n        \t//결과: [[1, 2, 3], [11, 22, 33], [111, 222, 333]]\r\n\r\n\t\tSystem.out.println(datas.get(0));\r\n\t\t//결과: [1, 2, 3]\r\n         */\r\n\r\n        //리사이클러뷰\r\n        this.initializeData();\r\n        this.initializeData2();\r\n\r\n        RecyclerView view = vg.findViewById(R.id.recyclerViewVertical);\r\n\r\n        VerticalAdapter verticalAdapter = new VerticalAdapter(getContext(), allHobbyList, HobbyBigList2,this);\r\n        //여기의 this는 이 클래스 자체를 의미한다. 아래의 OnItemClick 을 override한 onClick()메서드가 실행되어야 하기 때문이다.\r\n        view.setHasFixedSize(true);\r\n        view.setLayoutManager(new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false));\r\n        view.setAdapter(verticalAdapter);\r\n\r\n\r\n        //화면전환\r\n        btnFinish.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Bundle bundle = new Bundle();\r\n                bundle.putStringArrayList(\"hobby\", list);\r\n                FragmentPlus fragmentPlus = new FragmentPlus();\r\n                fragmentPlus.setArguments(bundle);\r\n\r\n\r\n                //hide & show\r\n//                ((MainActivity)getActivity()).hideFragment(FragmentPlusSelectHobby.this);\r\n                //FragmentPlus fragmentPlus = new FragmentPlus();\r\n//                ((MainActivity)getActivity()).showFragment(fragmentPlus);\r\n\r\n                //remove\r\n                //((MainActivity)getActivity()).removeFragment(FragmentPlusSelectHobby.this);\r\n                //FragmentPlus fragmentPlus = new FragmentPlus();\r\n\r\n                //replace\r\n                ((MainActivity)getActivity()).replaceFragment(fragmentPlus);\r\n\r\n\r\n            }\r\n        });\r\n\r\n        //데이터 저장을 위한 객체 참조\r\n//        final FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n//        DatabaseReference ref = database.getReference();\r\n//        DatabaseReference usersRef = ref.child(\"users\");\r\n//        String uid = FirebaseAuth.getInstance().getCurrentUser().getUid();//사용자 uid\r\n//        DatabaseReference hopperRef = usersRef.child(uid); //  /users/uid\r\n\r\n        //push 데이터 저장\r\n//        DatabaseReference pushRef = hopperRef.child(\"hobby\");\r\n//        pushRef.push().setValue(new Hobby(\"탁구\"));\r\n//        pushRef.push().setValue(new Hobby(\"배구\"));\r\n\r\n        //update 데이터 저장\r\n//        Map<String, Object> hopperUpdates = new HashMap<>();\r\n//        hopperUpdates.put(\"hobby1\", \"베이킹\");\r\n//        hopperUpdates.put(\"hobby2\", new Hobby(\"공예\"));\r\n//        hopperUpdates.put(\"hobby2\", new Hobby(\"베이킹\"));\r\n        //hopperUpdates.put(\"hobby\", hobbyListTest);\r\n//        hopperRef.updateChildren(hopperUpdates); //데이터 업데이트\r\n\r\n\r\n\r\n//        Bundle data = getArguments();\r\n//        String data1 = data.getString(\"selectedList\");\r\n//        pushRef.push().setValue(new Hobby(data1));\r\n\r\n        //선택한 hobby값을 가져오기 위한, 커스텀 리스너 객체 생성 및 전달\r\n//        HorizontalAdapter horizontalAdapter= new HorizontalAdapter();\r\n//        horizontalAdapter.setOnItemClickListener(new HorizontalAdapter.OnItemClickListener() {\r\n//            @Override\r\n//            public void onItemClick(View v, int position) {\r\n//                //받아온 값을 데이터에 저장\r\n//                Bundle data = getArguments();\r\n//                String data1 = data.getString(\"selectedList\");\r\n//                pushRef.push().setValue(new Hobby(data1));\r\n//\r\n//            }\r\n//        });\r\n\r\n        return vg;\r\n    }\r\n\r\n    @Override\r\n    public void onClick(String value) {\r\n        //value this data you receive when selectedItems() called\r\n        list.add(value);\r\n        Log.d(\"onClickSuccess?\",value); //성공적으로 받아진다.\r\n    }\r\n\r\n    //소분류 취미목록 데이터 입력\r\n    public void initializeData()\r\n    {\r\n        ArrayList<Hobby> hobbyList1 = new ArrayList();\r\n\r\n        hobbyList1.add(new Hobby( \"클래식\"));\r\n        hobbyList1.add(new Hobby(\"K-pop\"));\r\n        hobbyList1.add(new Hobby(\"뉴에이지\"));\r\n        hobbyList1.add(new Hobby(\"발라드\"));\r\n        hobbyList1.add(new Hobby(\"랩/힙합\"));\r\n        hobbyList1.add(new Hobby(\"인디음악\"));\r\n        hobbyList1.add(new Hobby(\"록/메탈\"));\r\n        hobbyList1.add(new Hobby(\"포크.블루스\"));\r\n\r\n\r\n        allHobbyList.add(hobbyList1);\r\n\r\n        ArrayList<Hobby> hobbyList2 = new ArrayList();\r\n\r\n        hobbyList2.add(new Hobby( \"야구\"));\r\n        hobbyList2.add(new Hobby( \"축구\"));\r\n        hobbyList2.add(new Hobby( \"농구\"));\r\n        hobbyList2.add(new Hobby( \"볼링\"));\r\n        hobbyList2.add(new Hobby( \"당구\"));\r\n        hobbyList2.add(new Hobby( \"수영\"));\r\n        hobbyList2.add(new Hobby( \"탁구\"));\r\n        hobbyList2.add(new Hobby( \"폴댄스\"));\r\n        hobbyList2.add(new Hobby( \"골프\"));\r\n        hobbyList2.add(new Hobby( \"배드민턴\"));\r\n        hobbyList2.add(new Hobby( \"클라이밍\"));\r\n\r\n        allHobbyList.add(hobbyList2);\r\n\r\n        ArrayList<Hobby> hobbyList3 = new ArrayList();\r\n\r\n        hobbyList3.add(new Hobby( \"캠핑\"));\r\n        hobbyList3.add(new Hobby( \"바다\"));\r\n        hobbyList3.add(new Hobby( \"국내\"));\r\n        hobbyList3.add(new Hobby( \"해외\"));\r\n        hobbyList3.add(new Hobby( \"당일치기\"));\r\n        hobbyList3.add(new Hobby( \"배낭여행\"));\r\n        hobbyList3.add(new Hobby( \"익스트림\"));\r\n        hobbyList3.add(new Hobby( \"기타\"));\r\n\r\n        allHobbyList.add(hobbyList3);\r\n        ArrayList<Hobby> hobbyList4 = new ArrayList();\r\n\r\n        hobbyList4.add(new Hobby( \"전시\"));\r\n        hobbyList4.add(new Hobby( \"뮤지컬\"));\r\n        hobbyList4.add(new Hobby( \"영화\"));\r\n        hobbyList4.add(new Hobby( \"해외\"));\r\n        hobbyList4.add(new Hobby( \"콘서트\"));\r\n        hobbyList4.add(new Hobby( \"연극\"));\r\n        hobbyList4.add(new Hobby( \"오페라\"));\r\n        hobbyList4.add(new Hobby( \"연주회\"));\r\n        hobbyList4.add(new Hobby( \"오케스트라\"));\r\n        hobbyList4.add(new Hobby( \"기타\"));\r\n\r\n        allHobbyList.add(hobbyList4);\r\n\r\n        ArrayList<Hobby> hobbyList5 = new ArrayList();\r\n\r\n        hobbyList5.add(new Hobby( \"리본공예\"));\r\n        hobbyList5.add(new Hobby( \"비즈공예\"));\r\n        hobbyList5.add(new Hobby( \"도자기공예\"));\r\n        hobbyList5.add(new Hobby( \"넵킨공예\"));\r\n        hobbyList5.add(new Hobby( \"포크아트\"));\r\n        hobbyList5.add(new Hobby( \"북아트\"));\r\n        hobbyList5.add(new Hobby( \"클레이아트\"));\r\n        hobbyList5.add(new Hobby( \"가죽공예\"));\r\n        hobbyList5.add(new Hobby( \"유리공예\"));\r\n        hobbyList5.add(new Hobby( \"플라워아트\"));\r\n\r\n        allHobbyList.add(hobbyList5);\r\n\r\n        ArrayList<Hobby> hobbyList6 = new ArrayList();\r\n\r\n        hobbyList6.add(new Hobby( \"양식\"));\r\n        hobbyList6.add(new Hobby( \"한식\"));\r\n        hobbyList6.add(new Hobby( \"일식\"));\r\n        hobbyList6.add(new Hobby( \"중식\"));\r\n        hobbyList6.add(new Hobby( \"베이킹\"));\r\n        hobbyList6.add(new Hobby( \"설탕공예\"));\r\n\r\n\r\n        allHobbyList.add(hobbyList6);\r\n\r\n        ArrayList<Hobby> hobbyList7 = new ArrayList();\r\n\r\n        hobbyList6.add(new Hobby( \"강아지\"));\r\n        hobbyList6.add(new Hobby( \"고양이\"));\r\n        hobbyList6.add(new Hobby( \"조류\"));\r\n        hobbyList6.add(new Hobby( \"햄스터\"));\r\n        hobbyList6.add(new Hobby( \"파충류\"));\r\n        hobbyList6.add(new Hobby( \"곤충\"));\r\n\r\n\r\n        allHobbyList.add(hobbyList7);\r\n    }\r\n\r\n    //대분류 취미목록 데이터 입력\r\n    public void initializeData2()\r\n    {\r\n//        ArrayList<HobbyBig> hobbyBigList = new ArrayList();\r\n//        hobbyBigList.add(new HobbyBig( \"음악\"));\r\n//        hobbyBigList.add(new HobbyBig(\"스포츠\"));\r\n//        hobbyBigList.add(new HobbyBig(\"여행\"));\r\n//        hobbyBigList.add(new HobbyBig(\"문화\"));\r\n//        hobbyBigList.add(new HobbyBig(\"공예\"));\r\n//        hobbyBigList.add(new HobbyBig(\"요리\"));\r\n//        hobbyBigList.add(new HobbyBig(\"게임\"));\r\n//        hobbyBigList.add(new HobbyBig(\"팬모임\"));\r\n\r\n        HobbyBigList2.add(new HobbyBig( \"음악\"));\r\n        HobbyBigList2.add(new HobbyBig( \"스포츠\"));\r\n        HobbyBigList2.add(new HobbyBig( \"여행\"));\r\n        HobbyBigList2.add(new HobbyBig( \"문화\"));\r\n        HobbyBigList2.add(new HobbyBig( \"공예\"));\r\n        HobbyBigList2.add(new HobbyBig( \"요리\"));\r\n        HobbyBigList2.add(new HobbyBig( \"반려동물\"));\r\n\r\n    }\r\n}\r\nclass HorizontalAdapter extends RecyclerView.Adapter<HorizontalAdapter.HorizontalViewHolder> {\r\n\r\n    private OnItemClick mCallback; //OnItemClick 인터페이스 객체\r\n   private ArrayList<Hobby> dataList;\r\n    private SparseBooleanArray mSelectedItems = new SparseBooleanArray(0);//클릭하면 색상변경//클릭 안하면 0 하면 1??\r\n    private ArrayList<Hobby> selectedList= new ArrayList<>(); //선택한 취미 값\r\n\r\n    public HorizontalAdapter(){}\r\n\r\n    public HorizontalAdapter(ArrayList<Hobby> data, OnItemClick listener)\r\n    {\r\n        this.dataList = data;\r\n        this.mCallback = listener;\r\n    }\r\n\r\n//    public interface OnItemClickListener{\r\n//        void onItemClick(View v, int position);\r\n//    }//어텝터 내에서 커스텀 리스너 인터페이스 정의\r\n\r\n\r\n    public class HorizontalViewHolder extends RecyclerView.ViewHolder{\r\n        protected TextView tv;\r\n        private ArrayList<String> selectData = null ;\r\n        private String selected=\"\";\r\n        int count=1;\r\n\r\n        //받아올 값\r\n        public void selectedItems(){\r\n            mCallback.onClick(tv.getText().toString());//tv를 클릭하면?\r\n        }\r\n\r\n        public HorizontalViewHolder(View view)\r\n        {\r\n            super(view);\r\n            tv = view.findViewById(R.id.btn_hbList_in);\r\n            //클릭하면 색상변경\r\n            view.setOnClickListener(new View.OnClickListener() {\r\n                @RequiresApi(api = Build.VERSION_CODES.O)\r\n                @SuppressLint(\"ResourceAsColor\")\r\n                @Override\r\n                public void onClick(View v) {\r\n                    int position = getAdapterPosition();\r\n\r\n                    Log.d(\"tv\",tv.getText().toString());\r\n                    selectedItems();\r\n\r\n\r\n\r\n                    if ( mSelectedItems.get(position, false) ){\r\n\r\n                        mSelectedItems.put(position, false);\r\n                        v.setBackgroundColor(MAGENTA);\r\n\r\n                    } else {\r\n                        mSelectedItems.put(position, true);\r\n                        v.setBackgroundColor(YELLOW);\r\n                    }\r\n                    Log.d(\"test\", \"position = \" + position);\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public HorizontalViewHolder onCreateViewHolder(ViewGroup viewGroup, int i)\r\n    {\r\n        View v = LayoutInflater\r\n                .from(viewGroup.getContext())\r\n                .inflate(R.layout.select_hobby2_grid_in2, null);\r\n\r\n\r\n\r\n\r\n        return new HorizontalViewHolder(v);\r\n    }\r\n\r\n    @SuppressLint(\"ResourceAsColor\")\r\n    @Override\r\n    public void onBindViewHolder(HorizontalViewHolder horizontalViewHolder, int position)\r\n    {\r\n//        horizontalViewHolder\r\n//                .image\r\n//                .setImageResource(dataList.get(position).getResourceID());\r\n        horizontalViewHolder\r\n                .tv\r\n                .setText(dataList.get(position).getHobbyname());\r\n\r\n        //클릭하면 색상 변경\r\n        if ( mSelectedItems.get(position, false) ){\r\n            horizontalViewHolder.itemView.setBackgroundColor(YELLOW);//선택했을 때\r\n        } else {\r\n            horizontalViewHolder.itemView.setBackgroundColor(MAGENTA);//기본, 선택 안했을 때\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return dataList.size();\r\n    }\r\n\r\n    public ArrayList<Hobby> getSelected(){\r\n\r\n        return selectedList;\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nclass VerticalAdapter extends RecyclerView.Adapter<VerticalAdapter.VerticalViewHolder>{\r\n\r\n    private OnItemClick mCallback;\r\n    private ArrayList<ArrayList<Hobby>> AllHobbyList;//전체 취미목록들을 2차원 배열에 넣어준다.\r\n    private Context context;\r\n    //test 취미목록 대분류 넣기\r\n    private ArrayList<HobbyBig> DataListBig;\r\n\r\n    //test\r\n    public VerticalAdapter(ArrayList<HobbyBig> data)\r\n    {\r\n        this.DataListBig = data;\r\n    }\r\n    //\r\n\r\n    public VerticalAdapter(Context context, ArrayList<ArrayList<Hobby>> data, ArrayList<HobbyBig> data2,OnItemClick listener)\r\n    {\r\n        this.mCallback =listener;\r\n        this.context = context;\r\n        this.AllHobbyList = data;\r\n        this.DataListBig = data2;//대분류\r\n    }\r\n    //VerticalViewHolder 맨 처음 10개의 뷰객체를 기억하고 있을(홀딩) 객체\r\n    public class VerticalViewHolder extends RecyclerView.ViewHolder{\r\n        protected RecyclerView recyclerView;\r\n        protected TextView textView;\r\n\r\n        public VerticalViewHolder(View view)\r\n        {\r\n            super(view);\r\n            textView = view.findViewById(R.id.tv_hobby);\r\n            this.recyclerView = (RecyclerView)view.findViewById(R.id.recyclerViewVertical);\r\n        }\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public VerticalViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {\r\n        View v = LayoutInflater\r\n                .from(viewGroup.getContext())\r\n                .inflate(R.layout.select_hobby2_grid_in, null);\r\n        return new VerticalViewHolder(v);\r\n    }\r\n    //수직 RecyclerView의 데이터 항목은 앞서 구현한 수평 RecyclerView가 배치된다고 하였습니다.\r\n    // 그러기 위해 onBindViewHolder에서 HorizontalAdapter 객체를 생성\r\n    @Override\r\n    public void onBindViewHolder(@NonNull VerticalViewHolder verticalViewHolder, int position) {\r\n        HorizontalAdapter adapter = new HorizontalAdapter(AllHobbyList.get(position),mCallback);\r\n        //adapter.getSelected();\r\n        //현재 위치의 arrayList를 AllHobbyList로 받아서 adapter생성.\r\n\r\n        //대분류 배열 처리- textView에 넣기\r\n        verticalViewHolder\r\n                .textView\r\n                .setText(DataListBig.get(position).getHobbyBigname());\r\n\r\n        verticalViewHolder.recyclerView.setHasFixedSize(true);\r\n        verticalViewHolder.recyclerView.setLayoutManager(new LinearLayoutManager(context\r\n                , LinearLayoutManager.HORIZONTAL\r\n                ,false));\r\n        verticalViewHolder.recyclerView.setAdapter(adapter);\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return AllHobbyList.size();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cookandroid/withmetabbar/navigation/FragmentPlusSelectHobby.java	(revision 61518bda48947942801de4706066db5509a396cd)
+++ app/src/main/java/com/cookandroid/withmetabbar/navigation/FragmentPlusSelectHobby.java	(date 1631757208007)
@@ -3,6 +3,7 @@
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.Intent;
+import android.graphics.Color;
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Parcelable;
@@ -19,6 +20,8 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.RequiresApi;
+import androidx.core.app.ActivityCompat;
+import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentTransaction;
@@ -35,11 +38,14 @@
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.collection.LLRBNode;
 
 import java.util.ArrayList;
 import java.util.List;
 
+import static android.graphics.Color.GRAY;
 import static android.graphics.Color.MAGENTA;
+import static android.graphics.Color.WHITE;
 import static android.graphics.Color.YELLOW;
 
 public class FragmentPlusSelectHobby extends Fragment implements OnItemClick{
@@ -64,6 +70,7 @@
     // TODO: Rename and change types of parameters
     private String mParam1;
     private String mParam2;
+    int color; //색깔 넣기
 
 
     public FragmentPlusSelectHobby() {
@@ -416,7 +423,9 @@
                     if ( mSelectedItems.get(position, false) ){
 
                         mSelectedItems.put(position, false);
-                        v.setBackgroundColor(MAGENTA);
+                        v.setBackgroundColor(GRAY);
+
+
 
                     } else {
                         mSelectedItems.put(position, true);
@@ -425,9 +434,12 @@
                     Log.d("test", "position = " + position);
 
                 }
+
+
             });
 
         }
+
     }
 
     @NonNull
@@ -459,7 +471,7 @@
         if ( mSelectedItems.get(position, false) ){
             horizontalViewHolder.itemView.setBackgroundColor(YELLOW);//선택했을 때
         } else {
-            horizontalViewHolder.itemView.setBackgroundColor(MAGENTA);//기본, 선택 안했을 때
+            horizontalViewHolder.itemView.setBackgroundColor(WHITE);//기본, 선택 안했을 때
         }
 
     }
Index: app/src/main/res/layout/select_hobby_grid_in.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:id=\"@+id/selectHobbyIn\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/tv_select_hobbyBig\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"120dp\"\r\n        android:text=\"음악\"\r\n        android:textColor=\"@color/black\"\r\n        android:textAlignment=\"center\"\r\n        android:backgroundTint=\"@color/yellow\"\r\n        android:gravity=\"center_horizontal\" />\r\n\r\n<!--    <ImageView-->\r\n<!--        android:id=\"@+id/imageView_sel_hb\"-->\r\n<!--        android:layout_width=\"match_parent\"-->\r\n<!--        android:layout_height=\"match_parent\"-->\r\n<!--        android:src=\"@drawable/hobby_music\"/>-->\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/select_hobby_grid_in.xml	(revision 61518bda48947942801de4706066db5509a396cd)
+++ app/src/main/res/layout/select_hobby_grid_in.xml	(date 1631757208011)
@@ -12,7 +12,6 @@
         android:text="음악"
         android:textColor="@color/black"
         android:textAlignment="center"
-        android:backgroundTint="@color/yellow"
         android:gravity="center_horizontal" />
 
 <!--    <ImageView-->
Index: app/src/main/res/layout/select_hobby2_grid_in2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/btn_hbList_in\"\r\n        android:layout_width=\"50dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:backgroundTint=\"@color/yellow\"\r\n        android:text=\"클래식\"\r\n        android:textAlignment=\"center\"/>\r\n</LinearLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/select_hobby2_grid_in2.xml	(revision 61518bda48947942801de4706066db5509a396cd)
+++ app/src/main/res/layout/select_hobby2_grid_in2.xml	(date 1631757208010)
@@ -5,9 +5,8 @@
 
     <TextView
         android:id="@+id/btn_hbList_in"
-        android:layout_width="50dp"
+        android:layout_width="60dp"
         android:layout_height="wrap_content"
-        android:backgroundTint="@color/yellow"
         android:text="클래식"
         android:textAlignment="center"/>
 </LinearLayout>
