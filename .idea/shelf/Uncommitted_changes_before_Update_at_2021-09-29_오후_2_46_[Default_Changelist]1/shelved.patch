Index: app/src/main/java/com/cookandroid/withmetabbar/certify/JoinStartFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cookandroid.withmetabbar.certify;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Intent;\r\nimport android.media.MediaPlayer;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.telephony.PhoneNumberFormattingTextWatcher;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.Toast;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.SearchView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport com.cookandroid.withmetabbar.MainActivity;\r\nimport com.cookandroid.withmetabbar.MainActivityHome;\r\nimport com.cookandroid.withmetabbar.MainActivityWebView;\r\nimport com.cookandroid.withmetabbar.R;\r\nimport com.cookandroid.withmetabbar.model.ChatModel;\r\nimport com.cookandroid.withmetabbar.model.Meet;\r\nimport com.cookandroid.withmetabbar.model.MeetInfo;\r\nimport com.cookandroid.withmetabbar.model.Member;\r\nimport com.cookandroid.withmetabbar.navigation.FragmentPlusSelectHobby;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.OutputStreamWriter;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.sql.Timestamp;\r\nimport java.text.DateFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\n\r\nimport static android.app.Activity.RESULT_CANCELED;\r\nimport static android.app.Activity.RESULT_OK;\r\nimport static android.content.ContentValues.TAG;\r\n\r\n\r\npublic class JoinStartFragment extends Fragment {\r\n\r\n    ArrayList<String> list = new ArrayList<>();\r\n    private Date meetDate;\r\n    private static final int MAIN_ACTIVITY_WEBVIEW = 10000;\r\n    private AlertDialog dialog;\r\n    private final int GET_GALLERY_IMAGE = 200;//?무슨의미\r\n    private ImageView imageView, imageView7;\r\n    private Uri imageUri;//프로필이미지\r\n    private MediaPlayer MP;\r\n    private static final int SELECT_HOBBY = 30000;\r\n    private String uid;\r\n    private EditText etId,etPw,etName,etNick,etBirth,etAge,etPhoneNum,et_Birth;\r\n    private RadioButton cb_male,cb_female,cb_no;\r\n\r\n\r\n\r\n    Button btn_join,btn_live,btn_hobbys;\r\n\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    protected void onMainActivity(int requestCode, int resultCode, Intent data) {\r\n        if(requestCode == GET_GALLERY_IMAGE&&resultCode == RESULT_OK&&data !=\r\n                null && data.getData()!=null){\r\n            Uri selectedImageUri = data.getData();\r\n            imageView.setImageURI(selectedImageUri);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n\r\n        ViewGroup vGroup = (ViewGroup) inflater.inflate(R.layout.join_start_fragment, container, false);\r\n        etId = vGroup.findViewById(R.id.etId);\r\n        etPw = vGroup.findViewById(R.id.etPw);\r\n        etName = vGroup.findViewById(R.id.etName);\r\n        etNick = vGroup.findViewById(R.id.etNick);\r\n        etBirth = vGroup.findViewById(R.id.etBirth);\r\n        etAge = vGroup.findViewById(R.id.etAge);\r\n        etPhoneNum = vGroup.findViewById(R.id.etPhoneNum);\r\n        btn_join= vGroup.findViewById(R.id.button6);\r\n        btn_live = vGroup.findViewById(R.id.btn_live);\r\n        btn_hobbys = vGroup.findViewById(R.id.btn_hobbys);\r\n        cb_male = vGroup.findViewById(R.id.check_male);\r\n        cb_female = vGroup.findViewById(R.id.check_female);\r\n        cb_no = vGroup.findViewById(R.id.checkNo);\r\n        et_Birth = vGroup.findViewById(R.id.etBirth);\r\n        Button check_overlap= vGroup.findViewById(R.id.button_check);\r\n        RadioGroup gender = vGroup.findViewById(R.id.gender);\r\n\r\n        Intent intent = new Intent();\r\n\r\n        //라디오 그룹 설정\r\n\r\n        Bundle bundle = getArguments();\r\n        etPhoneNum.addTextChangedListener(new PhoneNumberFormattingTextWatcher());\r\n\r\n        //id 중복확인\r\n        check_overlap.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                FirebaseDatabase.getInstance().getReference(\"users\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull @NotNull DataSnapshot snapshot) {\r\n\r\n                        //ArrayList<Member> arrayList = new ArrayList<>();\r\n\r\n                        ArrayList<String> stringArrayList = new ArrayList<>();\r\n\r\n                        for (DataSnapshot dataSnapshott : snapshot.getChildren()){//반복문으로 데이터 List를 추출해냄.\r\n\r\n                            Member member = dataSnapshott.getValue(Member.class);\r\n\r\n                            stringArrayList.add(member.id);\r\n\r\n                            Log.d(\"stringArrayList\", String.valueOf(stringArrayList));\r\n\r\n                            //arrayList.add(member); //담은 데이터들을 배열리스트에 넣고 리사이클러뷰로 보낼 준비.\r\n\r\n\r\n\r\n                            //arrayList_copy.addAll(arrayList);//arrayList_copy에 복사\r\n\r\n                            //단어 검색\r\n                            //2021-08-16 검색기능 구현\r\n                            // meet의 값이 null값이 아니면, list_search_recycle이라는 리스트에 넣어라.\r\n//                            if (meet.title!=null){\r\n//                                list_search_recycle.add(meet.title);//list_search_recycle에 title값 저장\r\n//                                //취미목록 검색 리스트에 넣기 2021-09-13\r\n//                                int totalHobbyCount2 = meet.hobbyCate.size();\r\n//                                for (int index = 0; index < totalHobbyCount2; index++) {\r\n//                                    list_search_recycle.add(meet.hobbyCate.get(index)); //hobbyCate의 배열값을 넣는다.\r\n//                                }\r\n//\r\n//                            }\r\n                        }\r\n                        for (int i=0; i<stringArrayList.size(); i++){\r\n\r\n                            if (etId.getText().toString().equals(stringArrayList.get(i))){\r\n\r\n                                Log.d(\"stringArrayList.get(i)\",stringArrayList.get(i));\r\n                                Log.d(\"etId.getText().toString()\",etId.getText().toString());\r\n\r\n                                AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n                                dialog = builder.setMessage(\"이미 존재하는 email입니다.\")\r\n                                        .setNegativeButton(\"OK\", null)\r\n                                        .create();\r\n                                dialog.show();\r\n                                return;\r\n                                //Toast.makeText(getContext(),\"이미 존재하는 email입니다.\",Toast.LENGTH_SHORT).show();//토스메세지 출력\r\n                                //etId.setText(\"\");\r\n\r\n                            }else{\r\n                                AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n                                dialog = builder.setMessage(\"중복확인 되었습니다.\")\r\n                                        .setNegativeButton(\"OK\", null)\r\n                                        .create();\r\n                                dialog.show();\r\n                                return;\r\n                            }\r\n                        }\r\n//                        String value = snapshot.getValue(String.class);\r\n//                        if(value!=null){\r\n//                            Toast.makeText(getContext(),\"이미 존재하는 email입니다.\",Toast.LENGTH_SHORT).show();//토스메세지 출력\r\n//                            etId.setText(\"\");\r\n//                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull @NotNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n        //거주지역선택\r\n        btn_live.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Intent i = new Intent(getContext(), MainActivityWebView.class);\r\n                startActivityForResult(i, MAIN_ACTIVITY_WEBVIEW);//requestcode 2000 전송\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n        //날짜 선택\r\n\r\n        Calendar myCalendar = Calendar.getInstance();\r\n        DatePickerDialog.OnDateSetListener myDatePicker = new DatePickerDialog.OnDateSetListener() {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                myCalendar.set(Calendar.YEAR, year);\r\n                myCalendar.set(Calendar.MONTH, month);\r\n                myCalendar.set(Calendar.DAY_OF_MONTH, dayOfMonth);\r\n                updateLabel();\r\n\r\n                meetDate=myCalendar.getTime();\r\n            }\r\n\r\n            private void updateLabel() {\r\n                String myFormat = \"yyyy/MM/dd\";    // 출력형식   2018/11/28\r\n                SimpleDateFormat sdf = new SimpleDateFormat(myFormat, Locale.KOREA); //string형태로 바뀐다.\r\n\r\n                et_Birth.setText(sdf.format(myCalendar.getTime()));\r\n                DateFormat sdFormat = new SimpleDateFormat(\"yyyy-MM-dd\");//필요x\r\n\r\n                //데이터 firebase저장위해 meetDate 변수에 대입\r\n                try {\r\n                    //meetDate=myCalendar.getTime(); //캘린더타입\r\n                    //meetDate.=myCalendar.get(Calendar.DAY_OF_MONTH);\r\n\r\n                    //meetDate.setYear(myCalendar.get(Calendar.YEAR));//년\r\n                    //meetDate.setMonth(myCalendar.get(Calendar.MONTH));//월\r\n                    //meetDate.setDate(myCalendar.get(Calendar.DAY_OF_MONTH));//일\r\n\r\n                    //meetDate=myCalendar.get(Calendar.YEAR);\r\n                    //meetDate=myCalendar.get(Calendar.DAY_OF_WEEK);\r\n\r\n                    Log.d(\"meetDate\", String.valueOf(meetDate));\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        };\r\n\r\n        et_Birth.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                new DatePickerDialog(getContext(), myDatePicker, myCalendar.get(Calendar.YEAR), myCalendar.get(Calendar.MONTH), myCalendar.get(Calendar.DAY_OF_MONTH)).show();\r\n            }\r\n        });\r\n        //취미선택\r\n        btn_hobbys.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                btn_hobbys.setText(\"\");//etHobby 초기화\r\n                Intent i = new Intent(getContext(), FragmentPlusSelectHobby.class);\r\n                startActivityForResult(i, SELECT_HOBBY);//\r\n\r\n//                FragmentSelectHobby2 fragmentSelectHobby2= new FragmentSelectHobby2();\r\n//                ((MainActivity2)getActivity()).addFragment(fragmentSelectHobby2);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        btn_join.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Uri file = imageUri;\r\n\r\n                if (etId.getText().toString() == null || etName.getText().toString() == null || etPw.getText().toString() == null\r\n                        || etNick.getText().toString() == null || etAge.getText().toString() == null\r\n                        || btn_live.getText().toString() == null|| meetDate == null || list== null){\r\n                    Toast.makeText(getContext(),\"정보 입력을 완료하세요 :)\",Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                }else{\r\n                    try {\r\n                        FirebaseAuth.getInstance()\r\n                                .createUserWithEmailAndPassword(etId.getText().toString(),etPw.getText().toString())\r\n                                .addOnCompleteListener(getActivity(), new OnCompleteListener<AuthResult>() {\r\n\r\n                                    @Override\r\n                                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                                        if (task.isSuccessful()){\r\n\r\n                                            uid = task.getResult().getUser().getUid();\r\n\r\n                                            contentUpload();\r\n\r\n                                        }else{\r\n                                            Log.e(TAG, \"Error getting sign in methods for user\", task.getException());\r\n                                        }\r\n                                    }\r\n                                });\r\n\r\n                        return;\r\n                    }catch (Exception e){\r\n                        Toast.makeText(getContext(),\"모든 정보를 입력하세요.\",Toast.LENGTH_SHORT);\r\n                    }\r\n\r\n                }\r\n\r\n            }//onclidk\r\n        });\r\n\r\n\r\n        imageView = vGroup.findViewById(R.id.imagejoin);\r\n        imageView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n//                Intent intent = new Intent();\r\n                intent.setType(\"image/*\");\r\n                intent.setAction(Intent.ACTION_GET_CONTENT);\r\n                startActivityForResult(intent, GET_GALLERY_IMAGE);\r\n\r\n\r\n            }\r\n        });\r\n\r\n        return vGroup;\r\n    }\r\n\r\n    //갤러리로 가는 법\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == GET_GALLERY_IMAGE) {\r\n            if (resultCode == RESULT_OK) {\r\n                imageView.setImageURI(data.getData());\r\n                imageUri = data.getData();\r\n                Log.d(\"갤러리에서 불러온 이미지 경로\", String.valueOf(imageUri));\r\n\r\n            } else if (resultCode == RESULT_CANCELED) {\r\n                Toast.makeText(getContext(), \"사진 선택 취소\", Toast.LENGTH_LONG).show();\r\n            }\r\n        }\r\n        switch(requestCode){\r\n\r\n            case MAIN_ACTIVITY_WEBVIEW:\r\n\r\n                if(resultCode == RESULT_OK){\r\n\r\n                    String address = data.getExtras().getString(\"address\");\r\n                    if (data != null){\r\n                        btn_live.setText(address);\r\n                        //address =data;\r\n\r\n\r\n                    }\r\n\r\n\r\n                }\r\n                break;\r\n\r\n        }\r\n        switch(requestCode){\r\n\r\n            case SELECT_HOBBY:\r\n\r\n                if(resultCode == RESULT_OK){\r\n\r\n                    list = data.getExtras().getStringArrayList(\"hobby\");\r\n                    if (data != null){\r\n                        //list = bundle.getStringArrayList(\"hobby\");\r\n                        //Log.d(\"getBundleInPlus\", String.valueOf(bundle.getStringArrayList(\"hobby\")));\r\n                        //받은 취미 목록을 차례로 tv에 입력\r\n                        int totalHobbyCount = list.size();\r\n                        for (int index =0; index<totalHobbyCount; index++){\r\n                            btn_hobbys.append(\",\"+list.get(index));\r\n                        }\r\n\r\n                        //address =data;\r\n\r\n\r\n                    }\r\n\r\n\r\n                }\r\n                break;\r\n\r\n        }\r\n    } //갤러리에서 사진 불러와서 넣기\r\n\r\n    //업로드\r\n    public void contentUpload(){\r\n        Timestamp timestamp = new Timestamp(System.currentTimeMillis());\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMdd_hhmmss\");\r\n        sdf.format(timestamp);\r\n\r\n        String imageFileName = \"IMAGE_\"+ sdf.format(timestamp) + \"_.png\";\r\n\r\n        StorageReference storageRef = FirebaseStorage.getInstance().getReference().child(\"userImages\").child(imageFileName);\r\n\r\n        storageRef.putFile(imageUri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n            @Override\r\n            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                storageRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                    @Override\r\n                    public void onSuccess(Uri uri) {\r\n                        //String imageUrl2 = task.getResult().getUploadSessionUri().toString();\r\n                        Member member = new Member();\r\n                        member.uid =FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n                        member.id = etId.getText().toString().trim();\r\n                        member.pw = etPw.getText().toString().trim();\r\n                        member.mName = etName.getText().toString().trim();\r\n                        member.nick =etNick.getText().toString().trim();\r\n//                                                    member.profileImageUrl= file.toString();\r\n                        member.profileImageUrl= uri.toString();\r\n                        try {\r\n                            if (Integer.parseInt(etAge.getText().toString())!=0){\r\n                                member.mAge = Integer.parseInt(etAge.getText().toString());\r\n                            }\r\n\r\n                        }catch (Exception e){\r\n\r\n                        }\r\n                        member.mPlace = btn_live.getText().toString();\r\n                        member.mBirth=meetDate;\r\n\r\n                        //성별체크\r\n                        if (cb_male.isChecked()){\r\n                            member.mGen =1; //남자는 1\r\n                        }else if (cb_female.isChecked()){\r\n                            member.mGen =2; //여자는 2\r\n                        }else if (cb_no.isChecked()){\r\n                            member.mGen =0; //무관은 0\r\n                        }else {\r\n                            Toast.makeText(getContext(),\"성별을 체크하세요.\",Toast.LENGTH_SHORT);\r\n                        }\r\n\r\n\r\n                        //\r\n                        int totalHobbyCount2 = list.size();\r\n                        for (int index = 0; index < totalHobbyCount2; index++) {\r\n                            member.hobbyCate.add(list.get(index));\r\n                        }\r\n\r\n\r\n                        //빈곳이 없는지 체크\r\n                        if(member.id.equals(\"\")||member.pw.equals(\"\")||member.mName.equals(\"\")||member.nick.equals(\"\")||member.mAge==0||member.mPlace.equals(\"\")){\r\n                            AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n                            dialog = builder.setMessage(\"Empty text exist\")\r\n                                    .setNegativeButton(\"OK\", null)\r\n                                    .create();\r\n                            dialog.show();\r\n                            return;\r\n                        }\r\n\r\n\r\n                        //member.meetDate\r\n                        FirebaseDatabase.getInstance().getReference().child(\"users\").child(uid).setValue(member).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                FragmentManager fragmentManager = getActivity().getSupportFragmentManager();\r\n                                fragmentManager.beginTransaction().remove(JoinStartFragment.this).commit();\r\n                                Intent intent = new Intent(getContext(), MainActivity.class);\r\n                                startActivity(intent);\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                Toast.makeText(getContext(),\"image upload success\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    //이부분 데이터 TaskJOin 수정\r\n    public class TaskJoin extends AsyncTask<String, Void, String> {\r\n        String sendMsg, receiveMsg;\r\n        String serverIp = \"http://13.125.233.177:8080/AppWithMe/member/insert.jsp\";\r\n\r\n        @Override\r\n        protected String doInBackground(String... strings) {//뒤에서 돌아가는 가장 중요한 메소드\r\n            try {\r\n                String str;\r\n                URL url = new URL(serverIp);\r\n                HttpURLConnection conn = (HttpURLConnection) url.openConnection();\r\n                conn.setRequestProperty(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                conn.setRequestMethod(\"POST\");//POST 방식, GET방식으로 넘겨주면 한글처리부터 문제가 생기게 됨\r\n                OutputStreamWriter osw = new OutputStreamWriter(conn.getOutputStream());\r\n                //sendMsg = \"memberId=\"+ strings[0]+\"&password=\"+ strings[1];\r\n\r\n                //sendMsg = \"meetId=\"+ strings[0]+\"&meetName=\"+ strings[1];\r\n                sendMsg = \"memberId=\"+ strings[0]+\"&password=\"+ strings[1]+\"&memberName=\"+ strings[2]+\"&phoneNum=\"+ strings[3]\r\n                        +\"&birth=\"+ strings[4];\r\n                osw.write(sendMsg);\r\n                osw.flush();\r\n                if(conn.getResponseCode() == HttpURLConnection.HTTP_OK) {\r\n                    InputStreamReader tmp = new InputStreamReader(conn.getInputStream(), StandardCharsets.UTF_8);//UTF-8로 데이터 읽어옴\r\n                    BufferedReader reader = new BufferedReader(tmp);\r\n                    StringBuffer buffer = new StringBuffer();\r\n                    while ((str = reader.readLine()) != null) {\r\n                        buffer.append(str);\r\n                    }\r\n                    receiveMsg = buffer.toString();\r\n                } else {\r\n                    Log.i(\"통신 결과\", conn.getResponseCode()+\"에러\");\r\n                }\r\n            } catch (MalformedURLException e) {\r\n                e.printStackTrace();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            return receiveMsg;//String 타입인데 안에 형식이 json임\r\n        }\r\n\r\n    }\r\n    //2021-09-19 주소검색\r\n//    public void onActivityResult(int requestCode, int resultCode, Intent intent){\r\n//\r\n//        super.onActivityResult(requestCode, resultCode, intent);\r\n//\r\n//        switch(requestCode){\r\n//\r\n//            case SEARCH_ADDRESS_ACTIVITY:\r\n//\r\n//                if(resultCode == RESULT_OK){\r\n//\r\n//                    String data = intent.getExtras().getString(\"data\");\r\n//                    if (data != null)\r\n//                        et_address.setText(data);\r\n//\r\n//                }\r\n//                break;\r\n//\r\n//        }\r\n//\r\n//    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cookandroid/withmetabbar/certify/JoinStartFragment.java	(revision 55c8a0a722814a51bf3e2d563523ce63aeecfbf3)
+++ app/src/main/java/com/cookandroid/withmetabbar/certify/JoinStartFragment.java	(date 1632892382409)
@@ -87,12 +87,11 @@
     private MediaPlayer MP;
     private static final int SELECT_HOBBY = 30000;
     private String uid;
-    private EditText etId,etPw,etName,etNick,etBirth,etAge,etPhoneNum,et_Birth;
-    private RadioButton cb_male,cb_female,cb_no;
+    private EditText etId, etPw, etName, etNick, etBirth, etAge, etPhoneNum, et_Birth;
+    private RadioButton cb_male, cb_female, cb_no;
 
 
-
-    Button btn_join,btn_live,btn_hobbys;
+    Button btn_join, btn_live, btn_hobbys;
 
 
     @Override
@@ -101,19 +100,15 @@
     }
 
 
-
-
-
     protected void onMainActivity(int requestCode, int resultCode, Intent data) {
-        if(requestCode == GET_GALLERY_IMAGE&&resultCode == RESULT_OK&&data !=
-                null && data.getData()!=null){
+        if (requestCode == GET_GALLERY_IMAGE && resultCode == RESULT_OK && data !=
+                null && data.getData() != null) {
             Uri selectedImageUri = data.getData();
             imageView.setImageURI(selectedImageUri);
         }
     }
 
 
-
     @Nullable
     @Override
     public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
@@ -126,14 +121,14 @@
         etBirth = vGroup.findViewById(R.id.etBirth);
         etAge = vGroup.findViewById(R.id.etAge);
         etPhoneNum = vGroup.findViewById(R.id.etPhoneNum);
-        btn_join= vGroup.findViewById(R.id.button6);
+        btn_join = vGroup.findViewById(R.id.button6);
         btn_live = vGroup.findViewById(R.id.btn_live);
         btn_hobbys = vGroup.findViewById(R.id.btn_hobbys);
         cb_male = vGroup.findViewById(R.id.check_male);
         cb_female = vGroup.findViewById(R.id.check_female);
         cb_no = vGroup.findViewById(R.id.checkNo);
         et_Birth = vGroup.findViewById(R.id.etBirth);
-        Button check_overlap= vGroup.findViewById(R.id.button_check);
+        Button check_overlap = vGroup.findViewById(R.id.button_check);
         RadioGroup gender = vGroup.findViewById(R.id.gender);
 
         Intent intent = new Intent();
@@ -155,7 +150,7 @@
 
                         ArrayList<String> stringArrayList = new ArrayList<>();
 
-                        for (DataSnapshot dataSnapshott : snapshot.getChildren()){//반복문으로 데이터 List를 추출해냄.
+                        for (DataSnapshot dataSnapshott : snapshot.getChildren()) {//반복문으로 데이터 List를 추출해냄.
 
                             Member member = dataSnapshott.getValue(Member.class);
 
@@ -166,7 +161,6 @@
                             //arrayList.add(member); //담은 데이터들을 배열리스트에 넣고 리사이클러뷰로 보낼 준비.
 
 
-
                             //arrayList_copy.addAll(arrayList);//arrayList_copy에 복사
 
                             //단어 검색
@@ -182,12 +176,12 @@
 //
 //                            }
                         }
-                        for (int i=0; i<stringArrayList.size(); i++){
+                        for (int i = 0; i < stringArrayList.size(); i++) {
 
-                            if (etId.getText().toString().equals(stringArrayList.get(i))){
+                            if (etId.getText().toString().equals(stringArrayList.get(i))) {
 
-                                Log.d("stringArrayList.get(i)",stringArrayList.get(i));
-                                Log.d("etId.getText().toString()",etId.getText().toString());
+                                Log.d("stringArrayList.get(i)", stringArrayList.get(i));
+                                Log.d("etId.getText().toString()", etId.getText().toString());
 
                                 AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
                                 dialog = builder.setMessage("이미 존재하는 email입니다.")
@@ -198,7 +192,7 @@
                                 //Toast.makeText(getContext(),"이미 존재하는 email입니다.",Toast.LENGTH_SHORT).show();//토스메세지 출력
                                 //etId.setText("");
 
-                            }else{
+                            } else {
                                 AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
                                 dialog = builder.setMessage("중복확인 되었습니다.")
                                         .setNegativeButton("OK", null)
@@ -238,10 +232,6 @@
         });
 
 
-
-
-
-
         //날짜 선택
 
         Calendar myCalendar = Calendar.getInstance();
@@ -253,7 +243,7 @@
                 myCalendar.set(Calendar.DAY_OF_MONTH, dayOfMonth);
                 updateLabel();
 
-                meetDate=myCalendar.getTime();
+                meetDate = myCalendar.getTime();
             }
 
             private void updateLabel() {
@@ -312,33 +302,33 @@
 
                 if (etId.getText().toString() == null || etName.getText().toString() == null || etPw.getText().toString() == null
                         || etNick.getText().toString() == null || etAge.getText().toString() == null
-                        || btn_live.getText().toString() == null|| meetDate == null || list== null){
-                    Toast.makeText(getContext(),"정보 입력을 완료하세요 :)",Toast.LENGTH_SHORT).show();
+                        || btn_live.getText().toString() == null || meetDate == null || list == null) {
+                    Toast.makeText(getContext(), "정보 입력을 완료하세요 :)", Toast.LENGTH_SHORT).show();
 
 
-                }else{
+                } else {
                     try {
                         FirebaseAuth.getInstance()
-                                .createUserWithEmailAndPassword(etId.getText().toString(),etPw.getText().toString())
+                                .createUserWithEmailAndPassword(etId.getText().toString(), etPw.getText().toString())
                                 .addOnCompleteListener(getActivity(), new OnCompleteListener<AuthResult>() {
 
                                     @Override
                                     public void onComplete(@NonNull Task<AuthResult> task) {
-                                        if (task.isSuccessful()){
+                                        if (task.isSuccessful()) {
 
                                             uid = task.getResult().getUser().getUid();
 
                                             contentUpload();
 
-                                        }else{
+                                        } else {
                                             Log.e(TAG, "Error getting sign in methods for user", task.getException());
                                         }
                                     }
                                 });
 
                         return;
-                    }catch (Exception e){
-                        Toast.makeText(getContext(),"모든 정보를 입력하세요.",Toast.LENGTH_SHORT);
+                    } catch (Exception e) {
+                        Toast.makeText(getContext(), "모든 정보를 입력하세요.", Toast.LENGTH_SHORT);
                     }
 
                 }
@@ -377,14 +367,14 @@
                 Toast.makeText(getContext(), "사진 선택 취소", Toast.LENGTH_LONG).show();
             }
         }
-        switch(requestCode){
+        switch (requestCode) {
 
             case MAIN_ACTIVITY_WEBVIEW:
 
-                if(resultCode == RESULT_OK){
+                if (resultCode == RESULT_OK) {
 
                     String address = data.getExtras().getString("address");
-                    if (data != null){
+                    if (data != null) {
                         btn_live.setText(address);
                         //address =data;
 
@@ -396,20 +386,20 @@
                 break;
 
         }
-        switch(requestCode){
+        switch (requestCode) {
 
             case SELECT_HOBBY:
 
-                if(resultCode == RESULT_OK){
+                if (resultCode == RESULT_OK) {
 
                     list = data.getExtras().getStringArrayList("hobby");
-                    if (data != null){
+                    if (data != null) {
                         //list = bundle.getStringArrayList("hobby");
                         //Log.d("getBundleInPlus", String.valueOf(bundle.getStringArrayList("hobby")));
                         //받은 취미 목록을 차례로 tv에 입력
                         int totalHobbyCount = list.size();
-                        for (int index =0; index<totalHobbyCount; index++){
-                            btn_hobbys.append(","+list.get(index));
+                        for (int index = 0; index < totalHobbyCount; index++) {
+                            btn_hobbys.append("," + list.get(index));
                         }
 
                         //address =data;
@@ -425,12 +415,12 @@
     } //갤러리에서 사진 불러와서 넣기
 
     //업로드
-    public void contentUpload(){
+    public void contentUpload() {
         Timestamp timestamp = new Timestamp(System.currentTimeMillis());
         SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd_hhmmss");
         sdf.format(timestamp);
 
-        String imageFileName = "IMAGE_"+ sdf.format(timestamp) + "_.png";
+        String imageFileName = "IMAGE_" + sdf.format(timestamp) + "_.png";
 
         StorageReference storageRef = FirebaseStorage.getInstance().getReference().child("userImages").child(imageFileName);
 
@@ -442,33 +432,33 @@
                     public void onSuccess(Uri uri) {
                         //String imageUrl2 = task.getResult().getUploadSessionUri().toString();
                         Member member = new Member();
-                        member.uid =FirebaseAuth.getInstance().getCurrentUser().getUid();
+                        member.uid = FirebaseAuth.getInstance().getCurrentUser().getUid();
                         member.id = etId.getText().toString().trim();
                         member.pw = etPw.getText().toString().trim();
                         member.mName = etName.getText().toString().trim();
-                        member.nick =etNick.getText().toString().trim();
+                        member.nick = etNick.getText().toString().trim();
 //                                                    member.profileImageUrl= file.toString();
-                        member.profileImageUrl= uri.toString();
+                        member.profileImageUrl = uri.toString();
                         try {
-                            if (Integer.parseInt(etAge.getText().toString())!=0){
+                            if (Integer.parseInt(etAge.getText().toString()) != 0) {
                                 member.mAge = Integer.parseInt(etAge.getText().toString());
                             }
 
-                        }catch (Exception e){
+                        } catch (Exception e) {
 
                         }
                         member.mPlace = btn_live.getText().toString();
-                        member.mBirth=meetDate;
+                        member.mBirth = meetDate;
 
                         //성별체크
-                        if (cb_male.isChecked()){
-                            member.mGen =1; //남자는 1
-                        }else if (cb_female.isChecked()){
-                            member.mGen =2; //여자는 2
-                        }else if (cb_no.isChecked()){
-                            member.mGen =0; //무관은 0
-                        }else {
-                            Toast.makeText(getContext(),"성별을 체크하세요.",Toast.LENGTH_SHORT);
+                        if (cb_male.isChecked()) {
+                            member.mGen = 1; //남자는 1
+                        } else if (cb_female.isChecked()) {
+                            member.mGen = 2; //여자는 2
+                        } else if (cb_no.isChecked()) {
+                            member.mGen = 0; //무관은 0
+                        } else {
+                            Toast.makeText(getContext(), "성별을 체크하세요.", Toast.LENGTH_SHORT);
                         }
 
 
@@ -480,7 +470,7 @@
 
 
                         //빈곳이 없는지 체크
-                        if(member.id.equals("")||member.pw.equals("")||member.mName.equals("")||member.nick.equals("")||member.mAge==0||member.mPlace.equals("")){
+                        if (member.id.equals("") || member.pw.equals("") || member.mName.equals("") || member.nick.equals("") || member.mAge == 0 || member.mPlace.equals("")) {
                             AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
                             dialog = builder.setMessage("Empty text exist")
                                     .setNegativeButton("OK", null)
@@ -504,7 +494,7 @@
                         });
                     }
                 });
-                Toast.makeText(getContext(),"image upload success", Toast.LENGTH_SHORT).show();
+                Toast.makeText(getContext(), "image upload success", Toast.LENGTH_SHORT).show();
             }
         });
 
@@ -528,11 +518,11 @@
                 //sendMsg = "memberId="+ strings[0]+"&password="+ strings[1];
 
                 //sendMsg = "meetId="+ strings[0]+"&meetName="+ strings[1];
-                sendMsg = "memberId="+ strings[0]+"&password="+ strings[1]+"&memberName="+ strings[2]+"&phoneNum="+ strings[3]
-                        +"&birth="+ strings[4];
+                sendMsg = "memberId=" + strings[0] + "&password=" + strings[1] + "&memberName=" + strings[2] + "&phoneNum=" + strings[3]
+                        + "&birth=" + strings[4];
                 osw.write(sendMsg);
                 osw.flush();
-                if(conn.getResponseCode() == HttpURLConnection.HTTP_OK) {
+                if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) {
                     InputStreamReader tmp = new InputStreamReader(conn.getInputStream(), StandardCharsets.UTF_8);//UTF-8로 데이터 읽어옴
                     BufferedReader reader = new BufferedReader(tmp);
                     StringBuffer buffer = new StringBuffer();
@@ -541,7 +531,7 @@
                     }
                     receiveMsg = buffer.toString();
                 } else {
-                    Log.i("통신 결과", conn.getResponseCode()+"에러");
+                    Log.i("통신 결과", conn.getResponseCode() + "에러");
                 }
             } catch (MalformedURLException e) {
                 e.printStackTrace();
@@ -552,31 +542,7 @@
         }
 
     }
-    //2021-09-19 주소검색
+}
+//2021-09-19 주소검색
 //    public void onActivityResult(int requestCode, int resultCode, Intent intent){
 //
-//        super.onActivityResult(requestCode, resultCode, intent);
-//
-//        switch(requestCode){
-//
-//            case SEARCH_ADDRESS_ACTIVITY:
-//
-//                if(resultCode == RESULT_OK){
-//
-//                    String data = intent.getExtras().getString("data");
-//                    if (data != null)
-//                        et_address.setText(data);
-//
-//                }
-//                break;
-//
-//        }
-//
-//    }
-
-
-
-
-
-
-}
\ No newline at end of file
